Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statements stmt
    3           | %empty

    4 stmt: expr SEMICOLON
    5     | ifstmt
    6     | whilestmt
    7     | forstmt
    8     | returnstmt
    9     | BREAK SEMICOLON
   10     | CONTINUE SEMICOLON
   11     | block
   12     | funcdef
   13     | SEMICOLON

   14 expr: assignexpr
   15     | expr ADDITION expr
   16     | expr SUBTRACTION expr
   17     | expr MULTIPLICATION expr
   18     | expr DIVISION expr
   19     | expr MODULO expr
   20     | expr GREATER_THAN expr
   21     | expr LESS_THAN expr
   22     | expr GREATER_OR_EQUAL expr
   23     | expr LESS_OR_EQUAL expr
   24     | expr EQUALITY expr
   25     | expr INEQUALITY expr
   26     | expr AND expr
   27     | expr OR expr
   28     | term

   29 term: LEFT_PARENTHESES expr RIGHT_PARENTHESES
   30     | SUBTRACTION expr
   31     | NOT expr
   32     | INCREMENT lvalue
   33     | lvalue INCREMENT
   34     | DECREMENT lvalue
   35     | lvalue DECREMENT
   36     | primary
   37     | ERROR

   38 assignexpr: lvalue ASSIGNMENT expr

   39 primary: lvalue
   40        | call
   41        | objectdef
   42        | LEFT_PARENTHESES funcdef RIGHT_PARENTHESES
   43        | const

   44 lvalue: ID
   45       | LOCAL ID
   46       | DOUBLE_COLON ID
   47       | member

   48 member: lvalue DOT ID
   49       | lvalue LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET
   50       | call DOT ID
   51       | call LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET

   52 call: call LEFT_PARENTHESES elist RIGHT_PARENTHESES
   53     | lvalue callsufix
   54     | LEFT_PARENTHESES funcdef RIGHT_PARENTHESES LEFT_PARENTHESES elist RIGHT_PARENTHESES

   55 callsufix: normcall
   56          | methodcall

   57 normcall: LEFT_PARENTHESES elist RIGHT_PARENTHESES

   58 methodcall: DOUBLE_DOT ID LEFT_PARENTHESES elist RIGHT_PARENTHESES

   59 elist: expr nextexpr
   60      | %empty

   61 nextexpr: COMMA expr nextexpr
   62         | %empty

   63 objectdef: LEFT_SQUARE_BRACKET elist RIGHT_SQUARE_BRACKET
   64          | LEFT_SQUARE_BRACKET indexed RIGHT_SQUARE_BRACKET

   65 indexed: indexedelem nextindexed

   66 nextindexed: COMMA indexedelem nextindexed
   67            | %empty

   68 indexedelem: LEFT_CURLY_BRACKET expr COLON expr RIGHT_CURLY_BRACKET

   69 $@1: %empty

   70 $@2: %empty

   71 block: LEFT_CURLY_BRACKET $@1 statements RIGHT_CURLY_BRACKET $@2

   72 funcname: ID
   73         | %empty

   74 $@3: %empty

   75 funcprefix: FUNCTION $@3 funcname

   76 $@4: %empty

   77 $@5: %empty

   78 funcargs: LEFT_PARENTHESES $@4 idlist $@5 RIGHT_PARENTHESES

   79 funcbody: block

   80 $@6: %empty

   81 funcdef: funcprefix funcargs $@6 funcbody

   82 const: INTEGER
   83      | REAL
   84      | STRING
   85      | NIL
   86      | TRUE
   87      | FALSE

   88 idlist: ID nextid
   89       | %empty

   90 nextid: COMMA ID nextid
   91       | %empty

   92 ifprefix: IF LEFT_PARENTHESES expr RIGHT_PARENTHESES

   93 elseprefix: ELSE

   94 ifstmt: ifprefix stmt
   95       | ifprefix stmt elseprefix stmt

   96 whilestart: WHILE

   97 whilecond: LEFT_PARENTHESES expr RIGHT_PARENTHESES

   98 $@7: %empty

   99 $@8: %empty

  100 whilestmt: whilestart $@7 whilecond stmt $@8

  101 $@9: %empty

  102 forprefix: FOR $@9 LEFT_PARENTHESES elist SEMICOLON expr SEMICOLON

  103 $@10: %empty

  104 forstmt: forprefix elist RIGHT_PARENTHESES stmt $@10

  105 returnstmt: RETURN SEMICOLON
  106           | RETURN expr SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IF <string> (258) 92
    ELSE <string> (259) 93
    WHILE <string> (260) 96
    FOR <string> (261) 102
    FUNCTION <string> (262) 75
    RETURN <string> (263) 105 106
    BREAK <string> (264) 9
    CONTINUE <string> (265) 10
    AND <string> (266) 26
    NOT <string> (267) 31
    OR <string> (268) 27
    LOCAL <string> (269) 45
    TRUE <string> (270) 86
    FALSE <string> (271) 87
    NIL <string> (272) 85
    ASSIGNMENT <string> (273) 38
    ADDITION <string> (274) 15
    SUBTRACTION <string> (275) 16 30
    MULTIPLICATION <string> (276) 17
    DIVISION <string> (277) 18
    MODULO <string> (278) 19
    EQUALITY <string> (279) 24
    INEQUALITY <string> (280) 25
    INCREMENT <string> (281) 32 33
    DECREMENT <string> (282) 34 35
    GREATER_THAN <string> (283) 20
    LESS_THAN <string> (284) 21
    GREATER_OR_EQUAL <string> (285) 22
    LESS_OR_EQUAL <string> (286) 23
    UMINUS <string> (287)
    LEFT_CURLY_BRACKET <string> (288) 68 71
    RIGHT_CURLY_BRACKET <string> (289) 68 71
    LEFT_SQUARE_BRACKET <string> (290) 49 51 63 64
    RIGHT_SQUARE_BRACKET <string> (291) 49 51 63 64
    LEFT_PARENTHESES <string> (292) 29 42 52 54 57 58 78 92 97 102
    RIGHT_PARENTHESES <string> (293) 29 42 52 54 57 58 78 92 97 104
    SEMICOLON <string> (294) 4 9 10 13 102 105 106
    COMMA <string> (295) 61 66 90
    COLON <string> (296) 68
    DOUBLE_COLON <string> (297) 46
    DOT <string> (298) 48 50
    DOUBLE_DOT <string> (299) 58
    ID <string> (300) 44 45 46 48 50 58 72 88 90
    INTEGER <integer> (301) 82
    REAL <real> (302) 83
    STRING <string> (303) 84
    ERROR <string> (304) 37
    PUREIF (305)


Nonterminals, with rules where they appear

    $accept (51)
        on left: 0
    program (52)
        on left: 1
        on right: 0
    statements (53)
        on left: 2 3
        on right: 1 2 71
    stmt (54)
        on left: 4 5 6 7 8 9 10 11 12 13
        on right: 2 94 95 100 104
    expr <expression> (55)
        on left: 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28
        on right: 4 15 16 17 18 19 20 21 22 23 24 25 26 27 29 30 31 38 49 51 59 61 68 92 97 102 106
    term <expression> (56)
        on left: 29 30 31 32 33 34 35 36 37
        on right: 28
    assignexpr <expression> (57)
        on left: 38
        on right: 14
    primary <expression> (58)
        on left: 39 40 41 42 43
        on right: 36
    lvalue <expression> (59)
        on left: 44 45 46 47
        on right: 32 33 34 35 38 39 48 49 53
    member (60)
        on left: 48 49 50 51
        on right: 47
    call (61)
        on left: 52 53 54
        on right: 40 50 51 52
    callsufix (62)
        on left: 55 56
        on right: 53
    normcall (63)
        on left: 57
        on right: 55
    methodcall (64)
        on left: 58
        on right: 56
    elist (65)
        on left: 59 60
        on right: 52 54 57 58 63 102 104
    nextexpr (66)
        on left: 61 62
        on right: 59 61
    objectdef (67)
        on left: 63 64
        on right: 41
    indexed (68)
        on left: 65
        on right: 64
    nextindexed (69)
        on left: 66 67
        on right: 65 66
    indexedelem (70)
        on left: 68
        on right: 65 66
    block (71)
        on left: 71
        on right: 11 79
    $@1 (72)
        on left: 69
        on right: 71
    $@2 (73)
        on left: 70
        on right: 71
    funcname (74)
        on left: 72 73
        on right: 75
    funcprefix <symbol> (75)
        on left: 75
        on right: 81
    $@3 (76)
        on left: 74
        on right: 75
    funcargs (77)
        on left: 78
        on right: 81
    $@4 (78)
        on left: 76
        on right: 78
    $@5 (79)
        on left: 77
        on right: 78
    funcbody <integer> (80)
        on left: 79
        on right: 81
    funcdef <symbol> (81)
        on left: 81
        on right: 12 42 54
    $@6 (82)
        on left: 80
        on right: 81
    const <expression> (83)
        on left: 82 83 84 85 86 87
        on right: 43
    idlist (84)
        on left: 88 89
        on right: 78
    nextid (85)
        on left: 90 91
        on right: 88 90
    ifprefix (86)
        on left: 92
        on right: 94 95
    elseprefix (87)
        on left: 93
        on right: 95
    ifstmt (88)
        on left: 94 95
        on right: 5
    whilestart (89)
        on left: 96
        on right: 100
    whilecond (90)
        on left: 97
        on right: 100
    whilestmt (91)
        on left: 100
        on right: 6
    $@7 (92)
        on left: 98
        on right: 100
    $@8 (93)
        on left: 99
        on right: 100
    forprefix (94)
        on left: 102
        on right: 104
    $@9 (95)
        on left: 101
        on right: 102
    forstmt (96)
        on left: 104
        on right: 7
    $@10 (97)
        on left: 103
        on right: 104
    returnstmt (98)
        on left: 105 106
        on right: 8


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (statements)

    program     go to state 1
    statements  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: statements .
    2 statements: statements . stmt

    IF                   shift, and go to state 4
    WHILE                shift, and go to state 5
    FOR                  shift, and go to state 6
    FUNCTION             shift, and go to state 7
    RETURN               shift, and go to state 8
    BREAK                shift, and go to state 9
    CONTINUE             shift, and go to state 10
    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_CURLY_BRACKET   shift, and go to state 19
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    SEMICOLON            shift, and go to state 22
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27
    ERROR                shift, and go to state 28

    $default  reduce using rule 1 (program)

    stmt        go to state 29
    expr        go to state 30
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    block       go to state 38
    funcprefix  go to state 39
    funcdef     go to state 40
    const       go to state 41
    ifprefix    go to state 42
    ifstmt      go to state 43
    whilestart  go to state 44
    whilestmt   go to state 45
    forprefix   go to state 46
    forstmt     go to state 47
    returnstmt  go to state 48


State 3

    0 $accept: program $end .

    $default  accept


State 4

   92 ifprefix: IF . LEFT_PARENTHESES expr RIGHT_PARENTHESES

    LEFT_PARENTHESES  shift, and go to state 49


State 5

   96 whilestart: WHILE .

    $default  reduce using rule 96 (whilestart)


State 6

  102 forprefix: FOR . $@9 LEFT_PARENTHESES elist SEMICOLON expr SEMICOLON

    $default  reduce using rule 101 ($@9)

    $@9  go to state 50


State 7

   75 funcprefix: FUNCTION . $@3 funcname

    $default  reduce using rule 74 ($@3)

    $@3  go to state 51


State 8

  105 returnstmt: RETURN . SEMICOLON
  106           | RETURN . expr SEMICOLON

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    SEMICOLON            shift, and go to state 52
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27
    ERROR                shift, and go to state 28

    expr        go to state 53
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 9

    9 stmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 54


State 10

   10 stmt: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 55


State 11

   31 term: NOT . expr

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27
    ERROR                shift, and go to state 28

    expr        go to state 56
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 12

   45 lvalue: LOCAL . ID

    ID  shift, and go to state 57


State 13

   86 const: TRUE .

    $default  reduce using rule 86 (const)


State 14

   87 const: FALSE .

    $default  reduce using rule 87 (const)


State 15

   85 const: NIL .

    $default  reduce using rule 85 (const)


State 16

   30 term: SUBTRACTION . expr

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27
    ERROR                shift, and go to state 28

    expr        go to state 58
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 17

   32 term: INCREMENT . lvalue

    LOCAL             shift, and go to state 12
    LEFT_PARENTHESES  shift, and go to state 59
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24

    lvalue  go to state 60
    member  go to state 35
    call    go to state 61


State 18

   34 term: DECREMENT . lvalue

    LOCAL             shift, and go to state 12
    LEFT_PARENTHESES  shift, and go to state 59
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24

    lvalue  go to state 62
    member  go to state 35
    call    go to state 61


State 19

   71 block: LEFT_CURLY_BRACKET . $@1 statements RIGHT_CURLY_BRACKET $@2

    $default  reduce using rule 69 ($@1)

    $@1  go to state 63


State 20

   63 objectdef: LEFT_SQUARE_BRACKET . elist RIGHT_SQUARE_BRACKET
   64          | LEFT_SQUARE_BRACKET . indexed RIGHT_SQUARE_BRACKET

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_CURLY_BRACKET   shift, and go to state 64
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27
    ERROR                shift, and go to state 28

    $default  reduce using rule 60 (elist)

    expr         go to state 65
    term         go to state 31
    assignexpr   go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    elist        go to state 66
    objectdef    go to state 37
    indexed      go to state 67
    indexedelem  go to state 68
    const        go to state 41


State 21

   29 term: LEFT_PARENTHESES . expr RIGHT_PARENTHESES
   42 primary: LEFT_PARENTHESES . funcdef RIGHT_PARENTHESES
   54 call: LEFT_PARENTHESES . funcdef RIGHT_PARENTHESES LEFT_PARENTHESES elist RIGHT_PARENTHESES

    FUNCTION             shift, and go to state 7
    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27
    ERROR                shift, and go to state 28

    expr        go to state 69
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    funcprefix  go to state 39
    funcdef     go to state 70
    const       go to state 41


State 22

   13 stmt: SEMICOLON .

    $default  reduce using rule 13 (stmt)


State 23

   46 lvalue: DOUBLE_COLON . ID

    ID  shift, and go to state 71


State 24

   44 lvalue: ID .

    $default  reduce using rule 44 (lvalue)


State 25

   82 const: INTEGER .

    $default  reduce using rule 82 (const)


State 26

   83 const: REAL .

    $default  reduce using rule 83 (const)


State 27

   84 const: STRING .

    $default  reduce using rule 84 (const)


State 28

   37 term: ERROR .

    $default  reduce using rule 37 (term)


State 29

    2 statements: statements stmt .

    $default  reduce using rule 2 (statements)


State 30

    4 stmt: expr . SEMICOLON
   15 expr: expr . ADDITION expr
   16     | expr . SUBTRACTION expr
   17     | expr . MULTIPLICATION expr
   18     | expr . DIVISION expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . LESS_THAN expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS_OR_EQUAL expr
   24     | expr . EQUALITY expr
   25     | expr . INEQUALITY expr
   26     | expr . AND expr
   27     | expr . OR expr

    AND               shift, and go to state 72
    OR                shift, and go to state 73
    ADDITION          shift, and go to state 74
    SUBTRACTION       shift, and go to state 75
    MULTIPLICATION    shift, and go to state 76
    DIVISION          shift, and go to state 77
    MODULO            shift, and go to state 78
    EQUALITY          shift, and go to state 79
    INEQUALITY        shift, and go to state 80
    GREATER_THAN      shift, and go to state 81
    LESS_THAN         shift, and go to state 82
    GREATER_OR_EQUAL  shift, and go to state 83
    LESS_OR_EQUAL     shift, and go to state 84
    SEMICOLON         shift, and go to state 85


State 31

   28 expr: term .

    $default  reduce using rule 28 (expr)


State 32

   14 expr: assignexpr .

    $default  reduce using rule 14 (expr)


State 33

   36 term: primary .

    $default  reduce using rule 36 (term)


State 34

   33 term: lvalue . INCREMENT
   35     | lvalue . DECREMENT
   38 assignexpr: lvalue . ASSIGNMENT expr
   39 primary: lvalue .
   48 member: lvalue . DOT ID
   49       | lvalue . LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET
   53 call: lvalue . callsufix

    ASSIGNMENT           shift, and go to state 86
    INCREMENT            shift, and go to state 87
    DECREMENT            shift, and go to state 88
    LEFT_SQUARE_BRACKET  shift, and go to state 89
    LEFT_PARENTHESES     shift, and go to state 90
    DOT                  shift, and go to state 91
    DOUBLE_DOT           shift, and go to state 92

    $default  reduce using rule 39 (primary)

    callsufix   go to state 93
    normcall    go to state 94
    methodcall  go to state 95


State 35

   47 lvalue: member .

    $default  reduce using rule 47 (lvalue)


State 36

   40 primary: call .
   50 member: call . DOT ID
   51       | call . LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET
   52 call: call . LEFT_PARENTHESES elist RIGHT_PARENTHESES

    LEFT_SQUARE_BRACKET  shift, and go to state 96
    LEFT_PARENTHESES     shift, and go to state 97
    DOT                  shift, and go to state 98

    $default  reduce using rule 40 (primary)


State 37

   41 primary: objectdef .

    $default  reduce using rule 41 (primary)


State 38

   11 stmt: block .

    $default  reduce using rule 11 (stmt)


State 39

   81 funcdef: funcprefix . funcargs $@6 funcbody

    LEFT_PARENTHESES  shift, and go to state 99

    funcargs  go to state 100


State 40

   12 stmt: funcdef .

    $default  reduce using rule 12 (stmt)


State 41

   43 primary: const .

    $default  reduce using rule 43 (primary)


State 42

   94 ifstmt: ifprefix . stmt
   95       | ifprefix . stmt elseprefix stmt

    IF                   shift, and go to state 4
    WHILE                shift, and go to state 5
    FOR                  shift, and go to state 6
    FUNCTION             shift, and go to state 7
    RETURN               shift, and go to state 8
    BREAK                shift, and go to state 9
    CONTINUE             shift, and go to state 10
    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_CURLY_BRACKET   shift, and go to state 19
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    SEMICOLON            shift, and go to state 22
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27
    ERROR                shift, and go to state 28

    stmt        go to state 101
    expr        go to state 30
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    block       go to state 38
    funcprefix  go to state 39
    funcdef     go to state 40
    const       go to state 41
    ifprefix    go to state 42
    ifstmt      go to state 43
    whilestart  go to state 44
    whilestmt   go to state 45
    forprefix   go to state 46
    forstmt     go to state 47
    returnstmt  go to state 48


State 43

    5 stmt: ifstmt .

    $default  reduce using rule 5 (stmt)


State 44

  100 whilestmt: whilestart . $@7 whilecond stmt $@8

    $default  reduce using rule 98 ($@7)

    $@7  go to state 102


State 45

    6 stmt: whilestmt .

    $default  reduce using rule 6 (stmt)


State 46

  104 forstmt: forprefix . elist RIGHT_PARENTHESES stmt $@10

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27
    ERROR                shift, and go to state 28

    $default  reduce using rule 60 (elist)

    expr        go to state 65
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    elist       go to state 103
    objectdef   go to state 37
    const       go to state 41


State 47

    7 stmt: forstmt .

    $default  reduce using rule 7 (stmt)


State 48

    8 stmt: returnstmt .

    $default  reduce using rule 8 (stmt)


State 49

   92 ifprefix: IF LEFT_PARENTHESES . expr RIGHT_PARENTHESES

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27
    ERROR                shift, and go to state 28

    expr        go to state 104
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 50

  102 forprefix: FOR $@9 . LEFT_PARENTHESES elist SEMICOLON expr SEMICOLON

    LEFT_PARENTHESES  shift, and go to state 105


State 51

   75 funcprefix: FUNCTION $@3 . funcname

    ID  shift, and go to state 106

    $default  reduce using rule 73 (funcname)

    funcname  go to state 107


State 52

  105 returnstmt: RETURN SEMICOLON .

    $default  reduce using rule 105 (returnstmt)


State 53

   15 expr: expr . ADDITION expr
   16     | expr . SUBTRACTION expr
   17     | expr . MULTIPLICATION expr
   18     | expr . DIVISION expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . LESS_THAN expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS_OR_EQUAL expr
   24     | expr . EQUALITY expr
   25     | expr . INEQUALITY expr
   26     | expr . AND expr
   27     | expr . OR expr
  106 returnstmt: RETURN expr . SEMICOLON

    AND               shift, and go to state 72
    OR                shift, and go to state 73
    ADDITION          shift, and go to state 74
    SUBTRACTION       shift, and go to state 75
    MULTIPLICATION    shift, and go to state 76
    DIVISION          shift, and go to state 77
    MODULO            shift, and go to state 78
    EQUALITY          shift, and go to state 79
    INEQUALITY        shift, and go to state 80
    GREATER_THAN      shift, and go to state 81
    LESS_THAN         shift, and go to state 82
    GREATER_OR_EQUAL  shift, and go to state 83
    LESS_OR_EQUAL     shift, and go to state 84
    SEMICOLON         shift, and go to state 108


State 54

    9 stmt: BREAK SEMICOLON .

    $default  reduce using rule 9 (stmt)


State 55

   10 stmt: CONTINUE SEMICOLON .

    $default  reduce using rule 10 (stmt)


State 56

   15 expr: expr . ADDITION expr
   16     | expr . SUBTRACTION expr
   17     | expr . MULTIPLICATION expr
   18     | expr . DIVISION expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . LESS_THAN expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS_OR_EQUAL expr
   24     | expr . EQUALITY expr
   25     | expr . INEQUALITY expr
   26     | expr . AND expr
   27     | expr . OR expr
   31 term: NOT expr .

    $default  reduce using rule 31 (term)


State 57

   45 lvalue: LOCAL ID .

    $default  reduce using rule 45 (lvalue)


State 58

   15 expr: expr . ADDITION expr
   16     | expr . SUBTRACTION expr
   17     | expr . MULTIPLICATION expr
   18     | expr . DIVISION expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . LESS_THAN expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS_OR_EQUAL expr
   24     | expr . EQUALITY expr
   25     | expr . INEQUALITY expr
   26     | expr . AND expr
   27     | expr . OR expr
   30 term: SUBTRACTION expr .

    $default  reduce using rule 30 (term)


State 59

   54 call: LEFT_PARENTHESES . funcdef RIGHT_PARENTHESES LEFT_PARENTHESES elist RIGHT_PARENTHESES

    FUNCTION  shift, and go to state 7

    funcprefix  go to state 39
    funcdef     go to state 109


State 60

   32 term: INCREMENT lvalue .
   48 member: lvalue . DOT ID
   49       | lvalue . LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET
   53 call: lvalue . callsufix

    LEFT_SQUARE_BRACKET  shift, and go to state 89
    LEFT_PARENTHESES     shift, and go to state 90
    DOT                  shift, and go to state 91
    DOUBLE_DOT           shift, and go to state 92

    $default  reduce using rule 32 (term)

    callsufix   go to state 93
    normcall    go to state 94
    methodcall  go to state 95


State 61

   50 member: call . DOT ID
   51       | call . LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET
   52 call: call . LEFT_PARENTHESES elist RIGHT_PARENTHESES

    LEFT_SQUARE_BRACKET  shift, and go to state 96
    LEFT_PARENTHESES     shift, and go to state 97
    DOT                  shift, and go to state 98


State 62

   34 term: DECREMENT lvalue .
   48 member: lvalue . DOT ID
   49       | lvalue . LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET
   53 call: lvalue . callsufix

    LEFT_SQUARE_BRACKET  shift, and go to state 89
    LEFT_PARENTHESES     shift, and go to state 90
    DOT                  shift, and go to state 91
    DOUBLE_DOT           shift, and go to state 92

    $default  reduce using rule 34 (term)

    callsufix   go to state 93
    normcall    go to state 94
    methodcall  go to state 95


State 63

   71 block: LEFT_CURLY_BRACKET $@1 . statements RIGHT_CURLY_BRACKET $@2

    $default  reduce using rule 3 (statements)

    statements  go to state 110


State 64

   68 indexedelem: LEFT_CURLY_BRACKET . expr COLON expr RIGHT_CURLY_BRACKET

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27
    ERROR                shift, and go to state 28

    expr        go to state 111
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 65

   15 expr: expr . ADDITION expr
   16     | expr . SUBTRACTION expr
   17     | expr . MULTIPLICATION expr
   18     | expr . DIVISION expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . LESS_THAN expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS_OR_EQUAL expr
   24     | expr . EQUALITY expr
   25     | expr . INEQUALITY expr
   26     | expr . AND expr
   27     | expr . OR expr
   59 elist: expr . nextexpr

    AND               shift, and go to state 72
    OR                shift, and go to state 73
    ADDITION          shift, and go to state 74
    SUBTRACTION       shift, and go to state 75
    MULTIPLICATION    shift, and go to state 76
    DIVISION          shift, and go to state 77
    MODULO            shift, and go to state 78
    EQUALITY          shift, and go to state 79
    INEQUALITY        shift, and go to state 80
    GREATER_THAN      shift, and go to state 81
    LESS_THAN         shift, and go to state 82
    GREATER_OR_EQUAL  shift, and go to state 83
    LESS_OR_EQUAL     shift, and go to state 84
    COMMA             shift, and go to state 112

    $default  reduce using rule 62 (nextexpr)

    nextexpr  go to state 113


State 66

   63 objectdef: LEFT_SQUARE_BRACKET elist . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 114


State 67

   64 objectdef: LEFT_SQUARE_BRACKET indexed . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 115


State 68

   65 indexed: indexedelem . nextindexed

    COMMA  shift, and go to state 116

    $default  reduce using rule 67 (nextindexed)

    nextindexed  go to state 117


State 69

   15 expr: expr . ADDITION expr
   16     | expr . SUBTRACTION expr
   17     | expr . MULTIPLICATION expr
   18     | expr . DIVISION expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . LESS_THAN expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS_OR_EQUAL expr
   24     | expr . EQUALITY expr
   25     | expr . INEQUALITY expr
   26     | expr . AND expr
   27     | expr . OR expr
   29 term: LEFT_PARENTHESES expr . RIGHT_PARENTHESES

    AND                shift, and go to state 72
    OR                 shift, and go to state 73
    ADDITION           shift, and go to state 74
    SUBTRACTION        shift, and go to state 75
    MULTIPLICATION     shift, and go to state 76
    DIVISION           shift, and go to state 77
    MODULO             shift, and go to state 78
    EQUALITY           shift, and go to state 79
    INEQUALITY         shift, and go to state 80
    GREATER_THAN       shift, and go to state 81
    LESS_THAN          shift, and go to state 82
    GREATER_OR_EQUAL   shift, and go to state 83
    LESS_OR_EQUAL      shift, and go to state 84
    RIGHT_PARENTHESES  shift, and go to state 118


State 70

   42 primary: LEFT_PARENTHESES funcdef . RIGHT_PARENTHESES
   54 call: LEFT_PARENTHESES funcdef . RIGHT_PARENTHESES LEFT_PARENTHESES elist RIGHT_PARENTHESES

    RIGHT_PARENTHESES  shift, and go to state 119


State 71

   46 lvalue: DOUBLE_COLON ID .

    $default  reduce using rule 46 (lvalue)


State 72

   26 expr: expr AND . expr

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27
    ERROR                shift, and go to state 28

    expr        go to state 120
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 73

   27 expr: expr OR . expr

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27
    ERROR                shift, and go to state 28

    expr        go to state 121
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 74

   15 expr: expr ADDITION . expr

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27
    ERROR                shift, and go to state 28

    expr        go to state 122
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 75

   16 expr: expr SUBTRACTION . expr

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27
    ERROR                shift, and go to state 28

    expr        go to state 123
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 76

   17 expr: expr MULTIPLICATION . expr

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27
    ERROR                shift, and go to state 28

    expr        go to state 124
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 77

   18 expr: expr DIVISION . expr

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27
    ERROR                shift, and go to state 28

    expr        go to state 125
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 78

   19 expr: expr MODULO . expr

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27
    ERROR                shift, and go to state 28

    expr        go to state 126
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 79

   24 expr: expr EQUALITY . expr

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27
    ERROR                shift, and go to state 28

    expr        go to state 127
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 80

   25 expr: expr INEQUALITY . expr

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27
    ERROR                shift, and go to state 28

    expr        go to state 128
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 81

   20 expr: expr GREATER_THAN . expr

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27
    ERROR                shift, and go to state 28

    expr        go to state 129
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 82

   21 expr: expr LESS_THAN . expr

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27
    ERROR                shift, and go to state 28

    expr        go to state 130
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 83

   22 expr: expr GREATER_OR_EQUAL . expr

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27
    ERROR                shift, and go to state 28

    expr        go to state 131
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 84

   23 expr: expr LESS_OR_EQUAL . expr

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27
    ERROR                shift, and go to state 28

    expr        go to state 132
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 85

    4 stmt: expr SEMICOLON .

    $default  reduce using rule 4 (stmt)


State 86

   38 assignexpr: lvalue ASSIGNMENT . expr

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27
    ERROR                shift, and go to state 28

    expr        go to state 133
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 87

   33 term: lvalue INCREMENT .

    $default  reduce using rule 33 (term)


State 88

   35 term: lvalue DECREMENT .

    $default  reduce using rule 35 (term)


State 89

   49 member: lvalue LEFT_SQUARE_BRACKET . expr RIGHT_SQUARE_BRACKET

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27
    ERROR                shift, and go to state 28

    expr        go to state 134
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 90

   57 normcall: LEFT_PARENTHESES . elist RIGHT_PARENTHESES

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27
    ERROR                shift, and go to state 28

    $default  reduce using rule 60 (elist)

    expr        go to state 65
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    elist       go to state 135
    objectdef   go to state 37
    const       go to state 41


State 91

   48 member: lvalue DOT . ID

    ID  shift, and go to state 136


State 92

   58 methodcall: DOUBLE_DOT . ID LEFT_PARENTHESES elist RIGHT_PARENTHESES

    ID  shift, and go to state 137


State 93

   53 call: lvalue callsufix .

    $default  reduce using rule 53 (call)


State 94

   55 callsufix: normcall .

    $default  reduce using rule 55 (callsufix)


State 95

   56 callsufix: methodcall .

    $default  reduce using rule 56 (callsufix)


State 96

   51 member: call LEFT_SQUARE_BRACKET . expr RIGHT_SQUARE_BRACKET

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27
    ERROR                shift, and go to state 28

    expr        go to state 138
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 97

   52 call: call LEFT_PARENTHESES . elist RIGHT_PARENTHESES

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27
    ERROR                shift, and go to state 28

    $default  reduce using rule 60 (elist)

    expr        go to state 65
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    elist       go to state 139
    objectdef   go to state 37
    const       go to state 41


State 98

   50 member: call DOT . ID

    ID  shift, and go to state 140


State 99

   78 funcargs: LEFT_PARENTHESES . $@4 idlist $@5 RIGHT_PARENTHESES

    $default  reduce using rule 76 ($@4)

    $@4  go to state 141


State 100

   81 funcdef: funcprefix funcargs . $@6 funcbody

    $default  reduce using rule 80 ($@6)

    $@6  go to state 142


State 101

   94 ifstmt: ifprefix stmt .
   95       | ifprefix stmt . elseprefix stmt

    ELSE  shift, and go to state 143

    $default  reduce using rule 94 (ifstmt)

    elseprefix  go to state 144


State 102

  100 whilestmt: whilestart $@7 . whilecond stmt $@8

    LEFT_PARENTHESES  shift, and go to state 145

    whilecond  go to state 146


State 103

  104 forstmt: forprefix elist . RIGHT_PARENTHESES stmt $@10

    RIGHT_PARENTHESES  shift, and go to state 147


State 104

   15 expr: expr . ADDITION expr
   16     | expr . SUBTRACTION expr
   17     | expr . MULTIPLICATION expr
   18     | expr . DIVISION expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . LESS_THAN expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS_OR_EQUAL expr
   24     | expr . EQUALITY expr
   25     | expr . INEQUALITY expr
   26     | expr . AND expr
   27     | expr . OR expr
   92 ifprefix: IF LEFT_PARENTHESES expr . RIGHT_PARENTHESES

    AND                shift, and go to state 72
    OR                 shift, and go to state 73
    ADDITION           shift, and go to state 74
    SUBTRACTION        shift, and go to state 75
    MULTIPLICATION     shift, and go to state 76
    DIVISION           shift, and go to state 77
    MODULO             shift, and go to state 78
    EQUALITY           shift, and go to state 79
    INEQUALITY         shift, and go to state 80
    GREATER_THAN       shift, and go to state 81
    LESS_THAN          shift, and go to state 82
    GREATER_OR_EQUAL   shift, and go to state 83
    LESS_OR_EQUAL      shift, and go to state 84
    RIGHT_PARENTHESES  shift, and go to state 148


State 105

  102 forprefix: FOR $@9 LEFT_PARENTHESES . elist SEMICOLON expr SEMICOLON

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27
    ERROR                shift, and go to state 28

    $default  reduce using rule 60 (elist)

    expr        go to state 65
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    elist       go to state 149
    objectdef   go to state 37
    const       go to state 41


State 106

   72 funcname: ID .

    $default  reduce using rule 72 (funcname)


State 107

   75 funcprefix: FUNCTION $@3 funcname .

    $default  reduce using rule 75 (funcprefix)


State 108

  106 returnstmt: RETURN expr SEMICOLON .

    $default  reduce using rule 106 (returnstmt)


State 109

   54 call: LEFT_PARENTHESES funcdef . RIGHT_PARENTHESES LEFT_PARENTHESES elist RIGHT_PARENTHESES

    RIGHT_PARENTHESES  shift, and go to state 150


State 110

    2 statements: statements . stmt
   71 block: LEFT_CURLY_BRACKET $@1 statements . RIGHT_CURLY_BRACKET $@2

    IF                   shift, and go to state 4
    WHILE                shift, and go to state 5
    FOR                  shift, and go to state 6
    FUNCTION             shift, and go to state 7
    RETURN               shift, and go to state 8
    BREAK                shift, and go to state 9
    CONTINUE             shift, and go to state 10
    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_CURLY_BRACKET   shift, and go to state 19
    RIGHT_CURLY_BRACKET  shift, and go to state 151
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    SEMICOLON            shift, and go to state 22
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27
    ERROR                shift, and go to state 28

    stmt        go to state 29
    expr        go to state 30
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    block       go to state 38
    funcprefix  go to state 39
    funcdef     go to state 40
    const       go to state 41
    ifprefix    go to state 42
    ifstmt      go to state 43
    whilestart  go to state 44
    whilestmt   go to state 45
    forprefix   go to state 46
    forstmt     go to state 47
    returnstmt  go to state 48


State 111

   15 expr: expr . ADDITION expr
   16     | expr . SUBTRACTION expr
   17     | expr . MULTIPLICATION expr
   18     | expr . DIVISION expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . LESS_THAN expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS_OR_EQUAL expr
   24     | expr . EQUALITY expr
   25     | expr . INEQUALITY expr
   26     | expr . AND expr
   27     | expr . OR expr
   68 indexedelem: LEFT_CURLY_BRACKET expr . COLON expr RIGHT_CURLY_BRACKET

    AND               shift, and go to state 72
    OR                shift, and go to state 73
    ADDITION          shift, and go to state 74
    SUBTRACTION       shift, and go to state 75
    MULTIPLICATION    shift, and go to state 76
    DIVISION          shift, and go to state 77
    MODULO            shift, and go to state 78
    EQUALITY          shift, and go to state 79
    INEQUALITY        shift, and go to state 80
    GREATER_THAN      shift, and go to state 81
    LESS_THAN         shift, and go to state 82
    GREATER_OR_EQUAL  shift, and go to state 83
    LESS_OR_EQUAL     shift, and go to state 84
    COLON             shift, and go to state 152


State 112

   61 nextexpr: COMMA . expr nextexpr

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27
    ERROR                shift, and go to state 28

    expr        go to state 153
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 113

   59 elist: expr nextexpr .

    $default  reduce using rule 59 (elist)


State 114

   63 objectdef: LEFT_SQUARE_BRACKET elist RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 63 (objectdef)


State 115

   64 objectdef: LEFT_SQUARE_BRACKET indexed RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 64 (objectdef)


State 116

   66 nextindexed: COMMA . indexedelem nextindexed

    LEFT_CURLY_BRACKET  shift, and go to state 64

    indexedelem  go to state 154


State 117

   65 indexed: indexedelem nextindexed .

    $default  reduce using rule 65 (indexed)


State 118

   29 term: LEFT_PARENTHESES expr RIGHT_PARENTHESES .

    $default  reduce using rule 29 (term)


State 119

   42 primary: LEFT_PARENTHESES funcdef RIGHT_PARENTHESES .
   54 call: LEFT_PARENTHESES funcdef RIGHT_PARENTHESES . LEFT_PARENTHESES elist RIGHT_PARENTHESES

    LEFT_PARENTHESES  shift, and go to state 155

    $default  reduce using rule 42 (primary)


State 120

   15 expr: expr . ADDITION expr
   16     | expr . SUBTRACTION expr
   17     | expr . MULTIPLICATION expr
   18     | expr . DIVISION expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . LESS_THAN expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS_OR_EQUAL expr
   24     | expr . EQUALITY expr
   25     | expr . INEQUALITY expr
   26     | expr . AND expr
   26     | expr AND expr .
   27     | expr . OR expr

    ADDITION          shift, and go to state 74
    SUBTRACTION       shift, and go to state 75
    MULTIPLICATION    shift, and go to state 76
    DIVISION          shift, and go to state 77
    MODULO            shift, and go to state 78
    EQUALITY          shift, and go to state 79
    INEQUALITY        shift, and go to state 80
    GREATER_THAN      shift, and go to state 81
    LESS_THAN         shift, and go to state 82
    GREATER_OR_EQUAL  shift, and go to state 83
    LESS_OR_EQUAL     shift, and go to state 84

    $default  reduce using rule 26 (expr)


State 121

   15 expr: expr . ADDITION expr
   16     | expr . SUBTRACTION expr
   17     | expr . MULTIPLICATION expr
   18     | expr . DIVISION expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . LESS_THAN expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS_OR_EQUAL expr
   24     | expr . EQUALITY expr
   25     | expr . INEQUALITY expr
   26     | expr . AND expr
   27     | expr . OR expr
   27     | expr OR expr .

    AND               shift, and go to state 72
    ADDITION          shift, and go to state 74
    SUBTRACTION       shift, and go to state 75
    MULTIPLICATION    shift, and go to state 76
    DIVISION          shift, and go to state 77
    MODULO            shift, and go to state 78
    EQUALITY          shift, and go to state 79
    INEQUALITY        shift, and go to state 80
    GREATER_THAN      shift, and go to state 81
    LESS_THAN         shift, and go to state 82
    GREATER_OR_EQUAL  shift, and go to state 83
    LESS_OR_EQUAL     shift, and go to state 84

    $default  reduce using rule 27 (expr)


State 122

   15 expr: expr . ADDITION expr
   15     | expr ADDITION expr .
   16     | expr . SUBTRACTION expr
   17     | expr . MULTIPLICATION expr
   18     | expr . DIVISION expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . LESS_THAN expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS_OR_EQUAL expr
   24     | expr . EQUALITY expr
   25     | expr . INEQUALITY expr
   26     | expr . AND expr
   27     | expr . OR expr

    MULTIPLICATION  shift, and go to state 76
    DIVISION        shift, and go to state 77
    MODULO          shift, and go to state 78

    $default  reduce using rule 15 (expr)


State 123

   15 expr: expr . ADDITION expr
   16     | expr . SUBTRACTION expr
   16     | expr SUBTRACTION expr .
   17     | expr . MULTIPLICATION expr
   18     | expr . DIVISION expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . LESS_THAN expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS_OR_EQUAL expr
   24     | expr . EQUALITY expr
   25     | expr . INEQUALITY expr
   26     | expr . AND expr
   27     | expr . OR expr

    MULTIPLICATION  shift, and go to state 76
    DIVISION        shift, and go to state 77
    MODULO          shift, and go to state 78

    $default  reduce using rule 16 (expr)


State 124

   15 expr: expr . ADDITION expr
   16     | expr . SUBTRACTION expr
   17     | expr . MULTIPLICATION expr
   17     | expr MULTIPLICATION expr .
   18     | expr . DIVISION expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . LESS_THAN expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS_OR_EQUAL expr
   24     | expr . EQUALITY expr
   25     | expr . INEQUALITY expr
   26     | expr . AND expr
   27     | expr . OR expr

    $default  reduce using rule 17 (expr)


State 125

   15 expr: expr . ADDITION expr
   16     | expr . SUBTRACTION expr
   17     | expr . MULTIPLICATION expr
   18     | expr . DIVISION expr
   18     | expr DIVISION expr .
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . LESS_THAN expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS_OR_EQUAL expr
   24     | expr . EQUALITY expr
   25     | expr . INEQUALITY expr
   26     | expr . AND expr
   27     | expr . OR expr

    $default  reduce using rule 18 (expr)


State 126

   15 expr: expr . ADDITION expr
   16     | expr . SUBTRACTION expr
   17     | expr . MULTIPLICATION expr
   18     | expr . DIVISION expr
   19     | expr . MODULO expr
   19     | expr MODULO expr .
   20     | expr . GREATER_THAN expr
   21     | expr . LESS_THAN expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS_OR_EQUAL expr
   24     | expr . EQUALITY expr
   25     | expr . INEQUALITY expr
   26     | expr . AND expr
   27     | expr . OR expr

    $default  reduce using rule 19 (expr)


State 127

   15 expr: expr . ADDITION expr
   16     | expr . SUBTRACTION expr
   17     | expr . MULTIPLICATION expr
   18     | expr . DIVISION expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . LESS_THAN expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS_OR_EQUAL expr
   24     | expr . EQUALITY expr
   24     | expr EQUALITY expr .
   25     | expr . INEQUALITY expr
   26     | expr . AND expr
   27     | expr . OR expr

    ADDITION          shift, and go to state 74
    SUBTRACTION       shift, and go to state 75
    MULTIPLICATION    shift, and go to state 76
    DIVISION          shift, and go to state 77
    MODULO            shift, and go to state 78
    GREATER_THAN      shift, and go to state 81
    LESS_THAN         shift, and go to state 82
    GREATER_OR_EQUAL  shift, and go to state 83
    LESS_OR_EQUAL     shift, and go to state 84

    EQUALITY    error (nonassociative)
    INEQUALITY  error (nonassociative)

    $default  reduce using rule 24 (expr)


State 128

   15 expr: expr . ADDITION expr
   16     | expr . SUBTRACTION expr
   17     | expr . MULTIPLICATION expr
   18     | expr . DIVISION expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . LESS_THAN expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS_OR_EQUAL expr
   24     | expr . EQUALITY expr
   25     | expr . INEQUALITY expr
   25     | expr INEQUALITY expr .
   26     | expr . AND expr
   27     | expr . OR expr

    ADDITION          shift, and go to state 74
    SUBTRACTION       shift, and go to state 75
    MULTIPLICATION    shift, and go to state 76
    DIVISION          shift, and go to state 77
    MODULO            shift, and go to state 78
    GREATER_THAN      shift, and go to state 81
    LESS_THAN         shift, and go to state 82
    GREATER_OR_EQUAL  shift, and go to state 83
    LESS_OR_EQUAL     shift, and go to state 84

    EQUALITY    error (nonassociative)
    INEQUALITY  error (nonassociative)

    $default  reduce using rule 25 (expr)


State 129

   15 expr: expr . ADDITION expr
   16     | expr . SUBTRACTION expr
   17     | expr . MULTIPLICATION expr
   18     | expr . DIVISION expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   20     | expr GREATER_THAN expr .
   21     | expr . LESS_THAN expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS_OR_EQUAL expr
   24     | expr . EQUALITY expr
   25     | expr . INEQUALITY expr
   26     | expr . AND expr
   27     | expr . OR expr

    ADDITION        shift, and go to state 74
    SUBTRACTION     shift, and go to state 75
    MULTIPLICATION  shift, and go to state 76
    DIVISION        shift, and go to state 77
    MODULO          shift, and go to state 78

    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)

    $default  reduce using rule 20 (expr)


State 130

   15 expr: expr . ADDITION expr
   16     | expr . SUBTRACTION expr
   17     | expr . MULTIPLICATION expr
   18     | expr . DIVISION expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . LESS_THAN expr
   21     | expr LESS_THAN expr .
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS_OR_EQUAL expr
   24     | expr . EQUALITY expr
   25     | expr . INEQUALITY expr
   26     | expr . AND expr
   27     | expr . OR expr

    ADDITION        shift, and go to state 74
    SUBTRACTION     shift, and go to state 75
    MULTIPLICATION  shift, and go to state 76
    DIVISION        shift, and go to state 77
    MODULO          shift, and go to state 78

    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)

    $default  reduce using rule 21 (expr)


State 131

   15 expr: expr . ADDITION expr
   16     | expr . SUBTRACTION expr
   17     | expr . MULTIPLICATION expr
   18     | expr . DIVISION expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . LESS_THAN expr
   22     | expr . GREATER_OR_EQUAL expr
   22     | expr GREATER_OR_EQUAL expr .
   23     | expr . LESS_OR_EQUAL expr
   24     | expr . EQUALITY expr
   25     | expr . INEQUALITY expr
   26     | expr . AND expr
   27     | expr . OR expr

    ADDITION        shift, and go to state 74
    SUBTRACTION     shift, and go to state 75
    MULTIPLICATION  shift, and go to state 76
    DIVISION        shift, and go to state 77
    MODULO          shift, and go to state 78

    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)

    $default  reduce using rule 22 (expr)


State 132

   15 expr: expr . ADDITION expr
   16     | expr . SUBTRACTION expr
   17     | expr . MULTIPLICATION expr
   18     | expr . DIVISION expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . LESS_THAN expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS_OR_EQUAL expr
   23     | expr LESS_OR_EQUAL expr .
   24     | expr . EQUALITY expr
   25     | expr . INEQUALITY expr
   26     | expr . AND expr
   27     | expr . OR expr

    ADDITION        shift, and go to state 74
    SUBTRACTION     shift, and go to state 75
    MULTIPLICATION  shift, and go to state 76
    DIVISION        shift, and go to state 77
    MODULO          shift, and go to state 78

    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)

    $default  reduce using rule 23 (expr)


State 133

   15 expr: expr . ADDITION expr
   16     | expr . SUBTRACTION expr
   17     | expr . MULTIPLICATION expr
   18     | expr . DIVISION expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . LESS_THAN expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS_OR_EQUAL expr
   24     | expr . EQUALITY expr
   25     | expr . INEQUALITY expr
   26     | expr . AND expr
   27     | expr . OR expr
   38 assignexpr: lvalue ASSIGNMENT expr .

    AND               shift, and go to state 72
    OR                shift, and go to state 73
    ADDITION          shift, and go to state 74
    SUBTRACTION       shift, and go to state 75
    MULTIPLICATION    shift, and go to state 76
    DIVISION          shift, and go to state 77
    MODULO            shift, and go to state 78
    EQUALITY          shift, and go to state 79
    INEQUALITY        shift, and go to state 80
    GREATER_THAN      shift, and go to state 81
    LESS_THAN         shift, and go to state 82
    GREATER_OR_EQUAL  shift, and go to state 83
    LESS_OR_EQUAL     shift, and go to state 84

    $default  reduce using rule 38 (assignexpr)


State 134

   15 expr: expr . ADDITION expr
   16     | expr . SUBTRACTION expr
   17     | expr . MULTIPLICATION expr
   18     | expr . DIVISION expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . LESS_THAN expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS_OR_EQUAL expr
   24     | expr . EQUALITY expr
   25     | expr . INEQUALITY expr
   26     | expr . AND expr
   27     | expr . OR expr
   49 member: lvalue LEFT_SQUARE_BRACKET expr . RIGHT_SQUARE_BRACKET

    AND                   shift, and go to state 72
    OR                    shift, and go to state 73
    ADDITION              shift, and go to state 74
    SUBTRACTION           shift, and go to state 75
    MULTIPLICATION        shift, and go to state 76
    DIVISION              shift, and go to state 77
    MODULO                shift, and go to state 78
    EQUALITY              shift, and go to state 79
    INEQUALITY            shift, and go to state 80
    GREATER_THAN          shift, and go to state 81
    LESS_THAN             shift, and go to state 82
    GREATER_OR_EQUAL      shift, and go to state 83
    LESS_OR_EQUAL         shift, and go to state 84
    RIGHT_SQUARE_BRACKET  shift, and go to state 156


State 135

   57 normcall: LEFT_PARENTHESES elist . RIGHT_PARENTHESES

    RIGHT_PARENTHESES  shift, and go to state 157


State 136

   48 member: lvalue DOT ID .

    $default  reduce using rule 48 (member)


State 137

   58 methodcall: DOUBLE_DOT ID . LEFT_PARENTHESES elist RIGHT_PARENTHESES

    LEFT_PARENTHESES  shift, and go to state 158


State 138

   15 expr: expr . ADDITION expr
   16     | expr . SUBTRACTION expr
   17     | expr . MULTIPLICATION expr
   18     | expr . DIVISION expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . LESS_THAN expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS_OR_EQUAL expr
   24     | expr . EQUALITY expr
   25     | expr . INEQUALITY expr
   26     | expr . AND expr
   27     | expr . OR expr
   51 member: call LEFT_SQUARE_BRACKET expr . RIGHT_SQUARE_BRACKET

    AND                   shift, and go to state 72
    OR                    shift, and go to state 73
    ADDITION              shift, and go to state 74
    SUBTRACTION           shift, and go to state 75
    MULTIPLICATION        shift, and go to state 76
    DIVISION              shift, and go to state 77
    MODULO                shift, and go to state 78
    EQUALITY              shift, and go to state 79
    INEQUALITY            shift, and go to state 80
    GREATER_THAN          shift, and go to state 81
    LESS_THAN             shift, and go to state 82
    GREATER_OR_EQUAL      shift, and go to state 83
    LESS_OR_EQUAL         shift, and go to state 84
    RIGHT_SQUARE_BRACKET  shift, and go to state 159


State 139

   52 call: call LEFT_PARENTHESES elist . RIGHT_PARENTHESES

    RIGHT_PARENTHESES  shift, and go to state 160


State 140

   50 member: call DOT ID .

    $default  reduce using rule 50 (member)


State 141

   78 funcargs: LEFT_PARENTHESES $@4 . idlist $@5 RIGHT_PARENTHESES

    ID  shift, and go to state 161

    $default  reduce using rule 89 (idlist)

    idlist  go to state 162


State 142

   81 funcdef: funcprefix funcargs $@6 . funcbody

    LEFT_CURLY_BRACKET  shift, and go to state 19

    block     go to state 163
    funcbody  go to state 164


State 143

   93 elseprefix: ELSE .

    $default  reduce using rule 93 (elseprefix)


State 144

   95 ifstmt: ifprefix stmt elseprefix . stmt

    IF                   shift, and go to state 4
    WHILE                shift, and go to state 5
    FOR                  shift, and go to state 6
    FUNCTION             shift, and go to state 7
    RETURN               shift, and go to state 8
    BREAK                shift, and go to state 9
    CONTINUE             shift, and go to state 10
    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_CURLY_BRACKET   shift, and go to state 19
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    SEMICOLON            shift, and go to state 22
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27
    ERROR                shift, and go to state 28

    stmt        go to state 165
    expr        go to state 30
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    block       go to state 38
    funcprefix  go to state 39
    funcdef     go to state 40
    const       go to state 41
    ifprefix    go to state 42
    ifstmt      go to state 43
    whilestart  go to state 44
    whilestmt   go to state 45
    forprefix   go to state 46
    forstmt     go to state 47
    returnstmt  go to state 48


State 145

   97 whilecond: LEFT_PARENTHESES . expr RIGHT_PARENTHESES

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27
    ERROR                shift, and go to state 28

    expr        go to state 166
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 146

  100 whilestmt: whilestart $@7 whilecond . stmt $@8

    IF                   shift, and go to state 4
    WHILE                shift, and go to state 5
    FOR                  shift, and go to state 6
    FUNCTION             shift, and go to state 7
    RETURN               shift, and go to state 8
    BREAK                shift, and go to state 9
    CONTINUE             shift, and go to state 10
    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_CURLY_BRACKET   shift, and go to state 19
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    SEMICOLON            shift, and go to state 22
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27
    ERROR                shift, and go to state 28

    stmt        go to state 167
    expr        go to state 30
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    block       go to state 38
    funcprefix  go to state 39
    funcdef     go to state 40
    const       go to state 41
    ifprefix    go to state 42
    ifstmt      go to state 43
    whilestart  go to state 44
    whilestmt   go to state 45
    forprefix   go to state 46
    forstmt     go to state 47
    returnstmt  go to state 48


State 147

  104 forstmt: forprefix elist RIGHT_PARENTHESES . stmt $@10

    IF                   shift, and go to state 4
    WHILE                shift, and go to state 5
    FOR                  shift, and go to state 6
    FUNCTION             shift, and go to state 7
    RETURN               shift, and go to state 8
    BREAK                shift, and go to state 9
    CONTINUE             shift, and go to state 10
    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_CURLY_BRACKET   shift, and go to state 19
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    SEMICOLON            shift, and go to state 22
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27
    ERROR                shift, and go to state 28

    stmt        go to state 168
    expr        go to state 30
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    block       go to state 38
    funcprefix  go to state 39
    funcdef     go to state 40
    const       go to state 41
    ifprefix    go to state 42
    ifstmt      go to state 43
    whilestart  go to state 44
    whilestmt   go to state 45
    forprefix   go to state 46
    forstmt     go to state 47
    returnstmt  go to state 48


State 148

   92 ifprefix: IF LEFT_PARENTHESES expr RIGHT_PARENTHESES .

    $default  reduce using rule 92 (ifprefix)


State 149

  102 forprefix: FOR $@9 LEFT_PARENTHESES elist . SEMICOLON expr SEMICOLON

    SEMICOLON  shift, and go to state 169


State 150

   54 call: LEFT_PARENTHESES funcdef RIGHT_PARENTHESES . LEFT_PARENTHESES elist RIGHT_PARENTHESES

    LEFT_PARENTHESES  shift, and go to state 155


State 151

   71 block: LEFT_CURLY_BRACKET $@1 statements RIGHT_CURLY_BRACKET . $@2

    $default  reduce using rule 70 ($@2)

    $@2  go to state 170


State 152

   68 indexedelem: LEFT_CURLY_BRACKET expr COLON . expr RIGHT_CURLY_BRACKET

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27
    ERROR                shift, and go to state 28

    expr        go to state 171
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 153

   15 expr: expr . ADDITION expr
   16     | expr . SUBTRACTION expr
   17     | expr . MULTIPLICATION expr
   18     | expr . DIVISION expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . LESS_THAN expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS_OR_EQUAL expr
   24     | expr . EQUALITY expr
   25     | expr . INEQUALITY expr
   26     | expr . AND expr
   27     | expr . OR expr
   61 nextexpr: COMMA expr . nextexpr

    AND               shift, and go to state 72
    OR                shift, and go to state 73
    ADDITION          shift, and go to state 74
    SUBTRACTION       shift, and go to state 75
    MULTIPLICATION    shift, and go to state 76
    DIVISION          shift, and go to state 77
    MODULO            shift, and go to state 78
    EQUALITY          shift, and go to state 79
    INEQUALITY        shift, and go to state 80
    GREATER_THAN      shift, and go to state 81
    LESS_THAN         shift, and go to state 82
    GREATER_OR_EQUAL  shift, and go to state 83
    LESS_OR_EQUAL     shift, and go to state 84
    COMMA             shift, and go to state 112

    $default  reduce using rule 62 (nextexpr)

    nextexpr  go to state 172


State 154

   66 nextindexed: COMMA indexedelem . nextindexed

    COMMA  shift, and go to state 116

    $default  reduce using rule 67 (nextindexed)

    nextindexed  go to state 173


State 155

   54 call: LEFT_PARENTHESES funcdef RIGHT_PARENTHESES LEFT_PARENTHESES . elist RIGHT_PARENTHESES

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27
    ERROR                shift, and go to state 28

    $default  reduce using rule 60 (elist)

    expr        go to state 65
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    elist       go to state 174
    objectdef   go to state 37
    const       go to state 41


State 156

   49 member: lvalue LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 49 (member)


State 157

   57 normcall: LEFT_PARENTHESES elist RIGHT_PARENTHESES .

    $default  reduce using rule 57 (normcall)


State 158

   58 methodcall: DOUBLE_DOT ID LEFT_PARENTHESES . elist RIGHT_PARENTHESES

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27
    ERROR                shift, and go to state 28

    $default  reduce using rule 60 (elist)

    expr        go to state 65
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    elist       go to state 175
    objectdef   go to state 37
    const       go to state 41


State 159

   51 member: call LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 51 (member)


State 160

   52 call: call LEFT_PARENTHESES elist RIGHT_PARENTHESES .

    $default  reduce using rule 52 (call)


State 161

   88 idlist: ID . nextid

    COMMA  shift, and go to state 176

    $default  reduce using rule 91 (nextid)

    nextid  go to state 177


State 162

   78 funcargs: LEFT_PARENTHESES $@4 idlist . $@5 RIGHT_PARENTHESES

    $default  reduce using rule 77 ($@5)

    $@5  go to state 178


State 163

   79 funcbody: block .

    $default  reduce using rule 79 (funcbody)


State 164

   81 funcdef: funcprefix funcargs $@6 funcbody .

    $default  reduce using rule 81 (funcdef)


State 165

   95 ifstmt: ifprefix stmt elseprefix stmt .

    $default  reduce using rule 95 (ifstmt)


State 166

   15 expr: expr . ADDITION expr
   16     | expr . SUBTRACTION expr
   17     | expr . MULTIPLICATION expr
   18     | expr . DIVISION expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . LESS_THAN expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS_OR_EQUAL expr
   24     | expr . EQUALITY expr
   25     | expr . INEQUALITY expr
   26     | expr . AND expr
   27     | expr . OR expr
   97 whilecond: LEFT_PARENTHESES expr . RIGHT_PARENTHESES

    AND                shift, and go to state 72
    OR                 shift, and go to state 73
    ADDITION           shift, and go to state 74
    SUBTRACTION        shift, and go to state 75
    MULTIPLICATION     shift, and go to state 76
    DIVISION           shift, and go to state 77
    MODULO             shift, and go to state 78
    EQUALITY           shift, and go to state 79
    INEQUALITY         shift, and go to state 80
    GREATER_THAN       shift, and go to state 81
    LESS_THAN          shift, and go to state 82
    GREATER_OR_EQUAL   shift, and go to state 83
    LESS_OR_EQUAL      shift, and go to state 84
    RIGHT_PARENTHESES  shift, and go to state 179


State 167

  100 whilestmt: whilestart $@7 whilecond stmt . $@8

    $default  reduce using rule 99 ($@8)

    $@8  go to state 180


State 168

  104 forstmt: forprefix elist RIGHT_PARENTHESES stmt . $@10

    $default  reduce using rule 103 ($@10)

    $@10  go to state 181


State 169

  102 forprefix: FOR $@9 LEFT_PARENTHESES elist SEMICOLON . expr SEMICOLON

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27
    ERROR                shift, and go to state 28

    expr        go to state 182
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 170

   71 block: LEFT_CURLY_BRACKET $@1 statements RIGHT_CURLY_BRACKET $@2 .

    $default  reduce using rule 71 (block)


State 171

   15 expr: expr . ADDITION expr
   16     | expr . SUBTRACTION expr
   17     | expr . MULTIPLICATION expr
   18     | expr . DIVISION expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . LESS_THAN expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS_OR_EQUAL expr
   24     | expr . EQUALITY expr
   25     | expr . INEQUALITY expr
   26     | expr . AND expr
   27     | expr . OR expr
   68 indexedelem: LEFT_CURLY_BRACKET expr COLON expr . RIGHT_CURLY_BRACKET

    AND                  shift, and go to state 72
    OR                   shift, and go to state 73
    ADDITION             shift, and go to state 74
    SUBTRACTION          shift, and go to state 75
    MULTIPLICATION       shift, and go to state 76
    DIVISION             shift, and go to state 77
    MODULO               shift, and go to state 78
    EQUALITY             shift, and go to state 79
    INEQUALITY           shift, and go to state 80
    GREATER_THAN         shift, and go to state 81
    LESS_THAN            shift, and go to state 82
    GREATER_OR_EQUAL     shift, and go to state 83
    LESS_OR_EQUAL        shift, and go to state 84
    RIGHT_CURLY_BRACKET  shift, and go to state 183


State 172

   61 nextexpr: COMMA expr nextexpr .

    $default  reduce using rule 61 (nextexpr)


State 173

   66 nextindexed: COMMA indexedelem nextindexed .

    $default  reduce using rule 66 (nextindexed)


State 174

   54 call: LEFT_PARENTHESES funcdef RIGHT_PARENTHESES LEFT_PARENTHESES elist . RIGHT_PARENTHESES

    RIGHT_PARENTHESES  shift, and go to state 184


State 175

   58 methodcall: DOUBLE_DOT ID LEFT_PARENTHESES elist . RIGHT_PARENTHESES

    RIGHT_PARENTHESES  shift, and go to state 185


State 176

   90 nextid: COMMA . ID nextid

    ID  shift, and go to state 186


State 177

   88 idlist: ID nextid .

    $default  reduce using rule 88 (idlist)


State 178

   78 funcargs: LEFT_PARENTHESES $@4 idlist $@5 . RIGHT_PARENTHESES

    RIGHT_PARENTHESES  shift, and go to state 187


State 179

   97 whilecond: LEFT_PARENTHESES expr RIGHT_PARENTHESES .

    $default  reduce using rule 97 (whilecond)


State 180

  100 whilestmt: whilestart $@7 whilecond stmt $@8 .

    $default  reduce using rule 100 (whilestmt)


State 181

  104 forstmt: forprefix elist RIGHT_PARENTHESES stmt $@10 .

    $default  reduce using rule 104 (forstmt)


State 182

   15 expr: expr . ADDITION expr
   16     | expr . SUBTRACTION expr
   17     | expr . MULTIPLICATION expr
   18     | expr . DIVISION expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . LESS_THAN expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS_OR_EQUAL expr
   24     | expr . EQUALITY expr
   25     | expr . INEQUALITY expr
   26     | expr . AND expr
   27     | expr . OR expr
  102 forprefix: FOR $@9 LEFT_PARENTHESES elist SEMICOLON expr . SEMICOLON

    AND               shift, and go to state 72
    OR                shift, and go to state 73
    ADDITION          shift, and go to state 74
    SUBTRACTION       shift, and go to state 75
    MULTIPLICATION    shift, and go to state 76
    DIVISION          shift, and go to state 77
    MODULO            shift, and go to state 78
    EQUALITY          shift, and go to state 79
    INEQUALITY        shift, and go to state 80
    GREATER_THAN      shift, and go to state 81
    LESS_THAN         shift, and go to state 82
    GREATER_OR_EQUAL  shift, and go to state 83
    LESS_OR_EQUAL     shift, and go to state 84
    SEMICOLON         shift, and go to state 188


State 183

   68 indexedelem: LEFT_CURLY_BRACKET expr COLON expr RIGHT_CURLY_BRACKET .

    $default  reduce using rule 68 (indexedelem)


State 184

   54 call: LEFT_PARENTHESES funcdef RIGHT_PARENTHESES LEFT_PARENTHESES elist RIGHT_PARENTHESES .

    $default  reduce using rule 54 (call)


State 185

   58 methodcall: DOUBLE_DOT ID LEFT_PARENTHESES elist RIGHT_PARENTHESES .

    $default  reduce using rule 58 (methodcall)


State 186

   90 nextid: COMMA ID . nextid

    COMMA  shift, and go to state 176

    $default  reduce using rule 91 (nextid)

    nextid  go to state 189


State 187

   78 funcargs: LEFT_PARENTHESES $@4 idlist $@5 RIGHT_PARENTHESES .

    $default  reduce using rule 78 (funcargs)


State 188

  102 forprefix: FOR $@9 LEFT_PARENTHESES elist SEMICOLON expr SEMICOLON .

    $default  reduce using rule 102 (forprefix)


State 189

   90 nextid: COMMA ID nextid .

    $default  reduce using rule 90 (nextid)
