Terminals unused in grammar

    ERROR


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statements stmt
    3           | %empty

    4 stmt: expr SEMICOLON
    5     | ifstmt
    6     | whilestmt
    7     | forstmt
    8     | returnstmt
    9     | BREAK SEMICOLON
   10     | CONTINUE SEMICOLON
   11     | block
   12     | funcdef
   13     | SEMICOLON

   14 expr: assignexpr
   15     | expr ADDITION expr
   16     | expr SUBTRACTION expr
   17     | expr MULTIPLICATION expr
   18     | expr DIVISION expr
   19     | expr MODULO expr
   20     | expr GREATER_THAN expr
   21     | expr LESS_THAN expr
   22     | expr GREATER_OR_EQUAL expr
   23     | expr LESS_OR_EQUAL expr
   24     | expr EQUALITY expr
   25     | expr INEQUALITY expr
   26     | expr AND expr
   27     | expr OR expr
   28     | term

   29 term: LEFT_PARENTHESES expr RIGHT_PARENTHESES
   30     | SUBTRACTION expr
   31     | NOT expr
   32     | INCREMENT lvalue
   33     | lvalue INCREMENT
   34     | DECREMENT lvalue
   35     | lvalue DECREMENT
   36     | primary

   37 assignexpr: lvalue ASSIGNMENT expr

   38 primary: lvalue
   39        | call
   40        | objectdef
   41        | LEFT_PARENTHESES funcdef RIGHT_PARENTHESES
   42        | const

   43 lvalue: ID
   44       | LOCAL ID
   45       | DOUBLE_COLON ID
   46       | member

   47 member: lvalue DOT ID
   48       | lvalue LEFT_SQUARE_BRACKET expr RIGHT_CURLY_BRACKET
   49       | call DOT ID
   50       | call LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET

   51 call: call LEFT_PARENTHESES elist RIGHT_PARENTHESES
   52     | lvalue callsufix
   53     | LEFT_PARENTHESES funcdef RIGHT_PARENTHESES LEFT_PARENTHESES elist RIGHT_PARENTHESES

   54 callsufix: normcall
   55          | methodcall

   56 normcall: LEFT_PARENTHESES elist RIGHT_PARENTHESES

   57 methodcall: DOUBLE_DOT ID LEFT_PARENTHESES elist RIGHT_PARENTHESES

   58 elist: expr nextexpr
   59      | %empty

   60 nextexpr: COMMA expr nextexpr
   61         | %empty

   62 objectdef: LEFT_SQUARE_BRACKET elist RIGHT_SQUARE_BRACKET
   63          | LEFT_SQUARE_BRACKET indexed RIGHT_SQUARE_BRACKET

   64 indexed: indexedelem nextindexed

   65 nextindexed: COMMA indexedelem nextindexed
   66            | %empty

   67 indexedelem: LEFT_CURLY_BRACKET expr COLON expr RIGHT_CURLY_BRACKET

   68 $@1: %empty

   69 $@2: %empty

   70 block: LEFT_CURLY_BRACKET $@1 statements RIGHT_CURLY_BRACKET $@2

   71 $@3: %empty

   72 $@4: %empty

   73 funcdef: FUNCTION $@3 ID $@4 LEFT_PARENTHESES idlist RIGHT_PARENTHESES block

   74 $@5: %empty

   75 funcdef: FUNCTION $@5 LEFT_PARENTHESES idlist RIGHT_PARENTHESES block

   76 const: INTEGER
   77      | REAL
   78      | STRING
   79      | NIL
   80      | TRUE
   81      | FALSE

   82 idlist: ID nextid
   83       | %empty

   84 nextid: COMMA ID nextid
   85       | %empty

   86 ifstmt: IF LEFT_PARENTHESES expr RIGHT_PARENTHESES stmt
   87       | IF LEFT_PARENTHESES expr RIGHT_PARENTHESES stmt ELSE stmt

   88 $@6: %empty

   89 $@7: %empty

   90 whilestmt: WHILE $@6 LEFT_PARENTHESES expr RIGHT_PARENTHESES stmt $@7

   91 $@8: %empty

   92 $@9: %empty

   93 forstmt: FOR $@8 LEFT_PARENTHESES elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESES stmt $@9

   94 returnstmt: RETURN SEMICOLON
   95           | RETURN expr SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IF <string> (258) 86 87
    ELSE <string> (259) 87
    WHILE <string> (260) 90
    FOR <string> (261) 93
    FUNCTION <string> (262) 73 75
    RETURN <string> (263) 94 95
    BREAK <string> (264) 9
    CONTINUE <string> (265) 10
    AND <string> (266) 26
    NOT <string> (267) 31
    OR <string> (268) 27
    LOCAL <string> (269) 44
    TRUE <string> (270) 80
    FALSE <string> (271) 81
    NIL <string> (272) 79
    ASSIGNMENT <string> (273) 37
    ADDITION <string> (274) 15
    SUBTRACTION <string> (275) 16 30
    MULTIPLICATION <string> (276) 17
    DIVISION <string> (277) 18
    MODULO <string> (278) 19
    EQUALITY <string> (279) 24
    INEQUALITY <string> (280) 25
    INCREMENT <string> (281) 32 33
    DECREMENT <string> (282) 34 35
    GREATER_THAN <string> (283) 20
    LESS_THAN <string> (284) 21
    GREATER_OR_EQUAL <string> (285) 22
    LESS_OR_EQUAL <string> (286) 23
    UMINUS <string> (287)
    LEFT_CURLY_BRACKET <string> (288) 67 70
    RIGHT_CURLY_BRACKET <string> (289) 48 67 70
    LEFT_SQUARE_BRACKET <string> (290) 48 50 62 63
    RIGHT_SQUARE_BRACKET <string> (291) 50 62 63
    LEFT_PARENTHESES <string> (292) 29 41 51 53 56 57 73 75 86 87 90 93
    RIGHT_PARENTHESES <string> (293) 29 41 51 53 56 57 73 75 86 87 90 93
    SEMICOLON <string> (294) 4 9 10 13 93 94 95
    COMMA <string> (295) 60 65 84
    COLON <string> (296) 67
    DOUBLE_COLON <string> (297) 45
    DOT <string> (298) 47 49
    DOUBLE_DOT <string> (299) 57
    ID <string> (300) 43 44 45 47 49 57 73 82 84
    INTEGER <integer> (301) 76
    REAL <real> (302) 77
    STRING <string> (303) 78
    ERROR <string> (304)
    PUREIF (305)


Nonterminals, with rules where they appear

    $accept (51)
        on left: 0
    program (52)
        on left: 1
        on right: 0
    statements (53)
        on left: 2 3
        on right: 1 2 70
    stmt (54)
        on left: 4 5 6 7 8 9 10 11 12 13
        on right: 2 86 87 90 93
    expr <expression> (55)
        on left: 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28
        on right: 4 15 16 17 18 19 20 21 22 23 24 25 26 27 29 30 31 37 48 50 58 60 67 86 87 90 93 95
    term <expression> (56)
        on left: 29 30 31 32 33 34 35 36
        on right: 28
    assignexpr <expression> (57)
        on left: 37
        on right: 14
    primary <expression> (58)
        on left: 38 39 40 41 42
        on right: 36
    lvalue <symbol> (59)
        on left: 43 44 45 46
        on right: 32 33 34 35 37 38 47 48 52
    member (60)
        on left: 47 48 49 50
        on right: 46
    call (61)
        on left: 51 52 53
        on right: 39 49 50 51
    callsufix (62)
        on left: 54 55
        on right: 52
    normcall (63)
        on left: 56
        on right: 54
    methodcall (64)
        on left: 57
        on right: 55
    elist (65)
        on left: 58 59
        on right: 51 53 56 57 62 93
    nextexpr (66)
        on left: 60 61
        on right: 58 60
    objectdef (67)
        on left: 62 63
        on right: 40
    indexed (68)
        on left: 64
        on right: 63
    nextindexed (69)
        on left: 65 66
        on right: 64 65
    indexedelem (70)
        on left: 67
        on right: 64 65
    block (71)
        on left: 70
        on right: 11 73 75
    $@1 (72)
        on left: 68
        on right: 70
    $@2 (73)
        on left: 69
        on right: 70
    funcdef (74)
        on left: 73 75
        on right: 12 41 53
    $@3 (75)
        on left: 71
        on right: 73
    $@4 (76)
        on left: 72
        on right: 73
    $@5 (77)
        on left: 74
        on right: 75
    const (78)
        on left: 76 77 78 79 80 81
        on right: 42
    idlist (79)
        on left: 82 83
        on right: 73 75
    nextid (80)
        on left: 84 85
        on right: 82 84
    ifstmt (81)
        on left: 86 87
        on right: 5
    whilestmt (82)
        on left: 90
        on right: 6
    $@6 (83)
        on left: 88
        on right: 90
    $@7 (84)
        on left: 89
        on right: 90
    forstmt (85)
        on left: 93
        on right: 7
    $@8 (86)
        on left: 91
        on right: 93
    $@9 (87)
        on left: 92
        on right: 93
    returnstmt (88)
        on left: 94 95
        on right: 8


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (statements)

    program     go to state 1
    statements  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: statements .
    2 statements: statements . stmt

    IF                   shift, and go to state 4
    WHILE                shift, and go to state 5
    FOR                  shift, and go to state 6
    FUNCTION             shift, and go to state 7
    RETURN               shift, and go to state 8
    BREAK                shift, and go to state 9
    CONTINUE             shift, and go to state 10
    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_CURLY_BRACKET   shift, and go to state 19
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    SEMICOLON            shift, and go to state 22
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27

    $default  reduce using rule 1 (program)

    stmt        go to state 28
    expr        go to state 29
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifstmt      go to state 40
    whilestmt   go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


State 3

    0 $accept: program $end .

    $default  accept


State 4

   86 ifstmt: IF . LEFT_PARENTHESES expr RIGHT_PARENTHESES stmt
   87       | IF . LEFT_PARENTHESES expr RIGHT_PARENTHESES stmt ELSE stmt

    LEFT_PARENTHESES  shift, and go to state 44


State 5

   90 whilestmt: WHILE . $@6 LEFT_PARENTHESES expr RIGHT_PARENTHESES stmt $@7

    $default  reduce using rule 88 ($@6)

    $@6  go to state 45


State 6

   93 forstmt: FOR . $@8 LEFT_PARENTHESES elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESES stmt $@9

    $default  reduce using rule 91 ($@8)

    $@8  go to state 46


State 7

   73 funcdef: FUNCTION . $@3 ID $@4 LEFT_PARENTHESES idlist RIGHT_PARENTHESES block
   75        | FUNCTION . $@5 LEFT_PARENTHESES idlist RIGHT_PARENTHESES block

    LEFT_PARENTHESES  reduce using rule 74 ($@5)
    $default          reduce using rule 71 ($@3)

    $@3  go to state 47
    $@5  go to state 48


State 8

   94 returnstmt: RETURN . SEMICOLON
   95           | RETURN . expr SEMICOLON

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    SEMICOLON            shift, and go to state 49
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27

    expr        go to state 50
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 9

    9 stmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 51


State 10

   10 stmt: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 52


State 11

   31 term: NOT . expr

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27

    expr        go to state 53
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 12

   44 lvalue: LOCAL . ID

    ID  shift, and go to state 54


State 13

   80 const: TRUE .

    $default  reduce using rule 80 (const)


State 14

   81 const: FALSE .

    $default  reduce using rule 81 (const)


State 15

   79 const: NIL .

    $default  reduce using rule 79 (const)


State 16

   30 term: SUBTRACTION . expr

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27

    expr        go to state 55
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 17

   32 term: INCREMENT . lvalue

    LOCAL             shift, and go to state 12
    LEFT_PARENTHESES  shift, and go to state 56
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24

    lvalue  go to state 57
    member  go to state 34
    call    go to state 58


State 18

   34 term: DECREMENT . lvalue

    LOCAL             shift, and go to state 12
    LEFT_PARENTHESES  shift, and go to state 56
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24

    lvalue  go to state 59
    member  go to state 34
    call    go to state 58


State 19

   70 block: LEFT_CURLY_BRACKET . $@1 statements RIGHT_CURLY_BRACKET $@2

    $default  reduce using rule 68 ($@1)

    $@1  go to state 60


State 20

   62 objectdef: LEFT_SQUARE_BRACKET . elist RIGHT_SQUARE_BRACKET
   63          | LEFT_SQUARE_BRACKET . indexed RIGHT_SQUARE_BRACKET

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_CURLY_BRACKET   shift, and go to state 61
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27

    $default  reduce using rule 59 (elist)

    expr         go to state 62
    term         go to state 30
    assignexpr   go to state 31
    primary      go to state 32
    lvalue       go to state 33
    member       go to state 34
    call         go to state 35
    elist        go to state 63
    objectdef    go to state 36
    indexed      go to state 64
    indexedelem  go to state 65
    const        go to state 39


State 21

   29 term: LEFT_PARENTHESES . expr RIGHT_PARENTHESES
   41 primary: LEFT_PARENTHESES . funcdef RIGHT_PARENTHESES
   53 call: LEFT_PARENTHESES . funcdef RIGHT_PARENTHESES LEFT_PARENTHESES elist RIGHT_PARENTHESES

    FUNCTION             shift, and go to state 7
    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27

    expr        go to state 66
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    funcdef     go to state 67
    const       go to state 39


State 22

   13 stmt: SEMICOLON .

    $default  reduce using rule 13 (stmt)


State 23

   45 lvalue: DOUBLE_COLON . ID

    ID  shift, and go to state 68


State 24

   43 lvalue: ID .

    $default  reduce using rule 43 (lvalue)


State 25

   76 const: INTEGER .

    $default  reduce using rule 76 (const)


State 26

   77 const: REAL .

    $default  reduce using rule 77 (const)


State 27

   78 const: STRING .

    $default  reduce using rule 78 (const)


State 28

    2 statements: statements stmt .

    $default  reduce using rule 2 (statements)


State 29

    4 stmt: expr . SEMICOLON
   15 expr: expr . ADDITION expr
   16     | expr . SUBTRACTION expr
   17     | expr . MULTIPLICATION expr
   18     | expr . DIVISION expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . LESS_THAN expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS_OR_EQUAL expr
   24     | expr . EQUALITY expr
   25     | expr . INEQUALITY expr
   26     | expr . AND expr
   27     | expr . OR expr

    AND               shift, and go to state 69
    OR                shift, and go to state 70
    ADDITION          shift, and go to state 71
    SUBTRACTION       shift, and go to state 72
    MULTIPLICATION    shift, and go to state 73
    DIVISION          shift, and go to state 74
    MODULO            shift, and go to state 75
    EQUALITY          shift, and go to state 76
    INEQUALITY        shift, and go to state 77
    GREATER_THAN      shift, and go to state 78
    LESS_THAN         shift, and go to state 79
    GREATER_OR_EQUAL  shift, and go to state 80
    LESS_OR_EQUAL     shift, and go to state 81
    SEMICOLON         shift, and go to state 82


State 30

   28 expr: term .

    $default  reduce using rule 28 (expr)


State 31

   14 expr: assignexpr .

    $default  reduce using rule 14 (expr)


State 32

   36 term: primary .

    $default  reduce using rule 36 (term)


State 33

   33 term: lvalue . INCREMENT
   35     | lvalue . DECREMENT
   37 assignexpr: lvalue . ASSIGNMENT expr
   38 primary: lvalue .
   47 member: lvalue . DOT ID
   48       | lvalue . LEFT_SQUARE_BRACKET expr RIGHT_CURLY_BRACKET
   52 call: lvalue . callsufix

    ASSIGNMENT           shift, and go to state 83
    INCREMENT            shift, and go to state 84
    DECREMENT            shift, and go to state 85
    LEFT_SQUARE_BRACKET  shift, and go to state 86
    LEFT_PARENTHESES     shift, and go to state 87
    DOT                  shift, and go to state 88
    DOUBLE_DOT           shift, and go to state 89

    $default  reduce using rule 38 (primary)

    callsufix   go to state 90
    normcall    go to state 91
    methodcall  go to state 92


State 34

   46 lvalue: member .

    $default  reduce using rule 46 (lvalue)


State 35

   39 primary: call .
   49 member: call . DOT ID
   50       | call . LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET
   51 call: call . LEFT_PARENTHESES elist RIGHT_PARENTHESES

    LEFT_SQUARE_BRACKET  shift, and go to state 93
    LEFT_PARENTHESES     shift, and go to state 94
    DOT                  shift, and go to state 95

    $default  reduce using rule 39 (primary)


State 36

   40 primary: objectdef .

    $default  reduce using rule 40 (primary)


State 37

   11 stmt: block .

    $default  reduce using rule 11 (stmt)


State 38

   12 stmt: funcdef .

    $default  reduce using rule 12 (stmt)


State 39

   42 primary: const .

    $default  reduce using rule 42 (primary)


State 40

    5 stmt: ifstmt .

    $default  reduce using rule 5 (stmt)


State 41

    6 stmt: whilestmt .

    $default  reduce using rule 6 (stmt)


State 42

    7 stmt: forstmt .

    $default  reduce using rule 7 (stmt)


State 43

    8 stmt: returnstmt .

    $default  reduce using rule 8 (stmt)


State 44

   86 ifstmt: IF LEFT_PARENTHESES . expr RIGHT_PARENTHESES stmt
   87       | IF LEFT_PARENTHESES . expr RIGHT_PARENTHESES stmt ELSE stmt

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27

    expr        go to state 96
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 45

   90 whilestmt: WHILE $@6 . LEFT_PARENTHESES expr RIGHT_PARENTHESES stmt $@7

    LEFT_PARENTHESES  shift, and go to state 97


State 46

   93 forstmt: FOR $@8 . LEFT_PARENTHESES elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESES stmt $@9

    LEFT_PARENTHESES  shift, and go to state 98


State 47

   73 funcdef: FUNCTION $@3 . ID $@4 LEFT_PARENTHESES idlist RIGHT_PARENTHESES block

    ID  shift, and go to state 99


State 48

   75 funcdef: FUNCTION $@5 . LEFT_PARENTHESES idlist RIGHT_PARENTHESES block

    LEFT_PARENTHESES  shift, and go to state 100


State 49

   94 returnstmt: RETURN SEMICOLON .

    $default  reduce using rule 94 (returnstmt)


State 50

   15 expr: expr . ADDITION expr
   16     | expr . SUBTRACTION expr
   17     | expr . MULTIPLICATION expr
   18     | expr . DIVISION expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . LESS_THAN expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS_OR_EQUAL expr
   24     | expr . EQUALITY expr
   25     | expr . INEQUALITY expr
   26     | expr . AND expr
   27     | expr . OR expr
   95 returnstmt: RETURN expr . SEMICOLON

    AND               shift, and go to state 69
    OR                shift, and go to state 70
    ADDITION          shift, and go to state 71
    SUBTRACTION       shift, and go to state 72
    MULTIPLICATION    shift, and go to state 73
    DIVISION          shift, and go to state 74
    MODULO            shift, and go to state 75
    EQUALITY          shift, and go to state 76
    INEQUALITY        shift, and go to state 77
    GREATER_THAN      shift, and go to state 78
    LESS_THAN         shift, and go to state 79
    GREATER_OR_EQUAL  shift, and go to state 80
    LESS_OR_EQUAL     shift, and go to state 81
    SEMICOLON         shift, and go to state 101


State 51

    9 stmt: BREAK SEMICOLON .

    $default  reduce using rule 9 (stmt)


State 52

   10 stmt: CONTINUE SEMICOLON .

    $default  reduce using rule 10 (stmt)


State 53

   15 expr: expr . ADDITION expr
   16     | expr . SUBTRACTION expr
   17     | expr . MULTIPLICATION expr
   18     | expr . DIVISION expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . LESS_THAN expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS_OR_EQUAL expr
   24     | expr . EQUALITY expr
   25     | expr . INEQUALITY expr
   26     | expr . AND expr
   27     | expr . OR expr
   31 term: NOT expr .

    $default  reduce using rule 31 (term)


State 54

   44 lvalue: LOCAL ID .

    $default  reduce using rule 44 (lvalue)


State 55

   15 expr: expr . ADDITION expr
   16     | expr . SUBTRACTION expr
   17     | expr . MULTIPLICATION expr
   18     | expr . DIVISION expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . LESS_THAN expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS_OR_EQUAL expr
   24     | expr . EQUALITY expr
   25     | expr . INEQUALITY expr
   26     | expr . AND expr
   27     | expr . OR expr
   30 term: SUBTRACTION expr .

    $default  reduce using rule 30 (term)


State 56

   53 call: LEFT_PARENTHESES . funcdef RIGHT_PARENTHESES LEFT_PARENTHESES elist RIGHT_PARENTHESES

    FUNCTION  shift, and go to state 7

    funcdef  go to state 102


State 57

   32 term: INCREMENT lvalue .
   47 member: lvalue . DOT ID
   48       | lvalue . LEFT_SQUARE_BRACKET expr RIGHT_CURLY_BRACKET
   52 call: lvalue . callsufix

    LEFT_SQUARE_BRACKET  shift, and go to state 86
    LEFT_PARENTHESES     shift, and go to state 87
    DOT                  shift, and go to state 88
    DOUBLE_DOT           shift, and go to state 89

    $default  reduce using rule 32 (term)

    callsufix   go to state 90
    normcall    go to state 91
    methodcall  go to state 92


State 58

   49 member: call . DOT ID
   50       | call . LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET
   51 call: call . LEFT_PARENTHESES elist RIGHT_PARENTHESES

    LEFT_SQUARE_BRACKET  shift, and go to state 93
    LEFT_PARENTHESES     shift, and go to state 94
    DOT                  shift, and go to state 95


State 59

   34 term: DECREMENT lvalue .
   47 member: lvalue . DOT ID
   48       | lvalue . LEFT_SQUARE_BRACKET expr RIGHT_CURLY_BRACKET
   52 call: lvalue . callsufix

    LEFT_SQUARE_BRACKET  shift, and go to state 86
    LEFT_PARENTHESES     shift, and go to state 87
    DOT                  shift, and go to state 88
    DOUBLE_DOT           shift, and go to state 89

    $default  reduce using rule 34 (term)

    callsufix   go to state 90
    normcall    go to state 91
    methodcall  go to state 92


State 60

   70 block: LEFT_CURLY_BRACKET $@1 . statements RIGHT_CURLY_BRACKET $@2

    $default  reduce using rule 3 (statements)

    statements  go to state 103


State 61

   67 indexedelem: LEFT_CURLY_BRACKET . expr COLON expr RIGHT_CURLY_BRACKET

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27

    expr        go to state 104
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 62

   15 expr: expr . ADDITION expr
   16     | expr . SUBTRACTION expr
   17     | expr . MULTIPLICATION expr
   18     | expr . DIVISION expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . LESS_THAN expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS_OR_EQUAL expr
   24     | expr . EQUALITY expr
   25     | expr . INEQUALITY expr
   26     | expr . AND expr
   27     | expr . OR expr
   58 elist: expr . nextexpr

    AND               shift, and go to state 69
    OR                shift, and go to state 70
    ADDITION          shift, and go to state 71
    SUBTRACTION       shift, and go to state 72
    MULTIPLICATION    shift, and go to state 73
    DIVISION          shift, and go to state 74
    MODULO            shift, and go to state 75
    EQUALITY          shift, and go to state 76
    INEQUALITY        shift, and go to state 77
    GREATER_THAN      shift, and go to state 78
    LESS_THAN         shift, and go to state 79
    GREATER_OR_EQUAL  shift, and go to state 80
    LESS_OR_EQUAL     shift, and go to state 81
    COMMA             shift, and go to state 105

    $default  reduce using rule 61 (nextexpr)

    nextexpr  go to state 106


State 63

   62 objectdef: LEFT_SQUARE_BRACKET elist . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 107


State 64

   63 objectdef: LEFT_SQUARE_BRACKET indexed . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 108


State 65

   64 indexed: indexedelem . nextindexed

    COMMA  shift, and go to state 109

    $default  reduce using rule 66 (nextindexed)

    nextindexed  go to state 110


State 66

   15 expr: expr . ADDITION expr
   16     | expr . SUBTRACTION expr
   17     | expr . MULTIPLICATION expr
   18     | expr . DIVISION expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . LESS_THAN expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS_OR_EQUAL expr
   24     | expr . EQUALITY expr
   25     | expr . INEQUALITY expr
   26     | expr . AND expr
   27     | expr . OR expr
   29 term: LEFT_PARENTHESES expr . RIGHT_PARENTHESES

    AND                shift, and go to state 69
    OR                 shift, and go to state 70
    ADDITION           shift, and go to state 71
    SUBTRACTION        shift, and go to state 72
    MULTIPLICATION     shift, and go to state 73
    DIVISION           shift, and go to state 74
    MODULO             shift, and go to state 75
    EQUALITY           shift, and go to state 76
    INEQUALITY         shift, and go to state 77
    GREATER_THAN       shift, and go to state 78
    LESS_THAN          shift, and go to state 79
    GREATER_OR_EQUAL   shift, and go to state 80
    LESS_OR_EQUAL      shift, and go to state 81
    RIGHT_PARENTHESES  shift, and go to state 111


State 67

   41 primary: LEFT_PARENTHESES funcdef . RIGHT_PARENTHESES
   53 call: LEFT_PARENTHESES funcdef . RIGHT_PARENTHESES LEFT_PARENTHESES elist RIGHT_PARENTHESES

    RIGHT_PARENTHESES  shift, and go to state 112


State 68

   45 lvalue: DOUBLE_COLON ID .

    $default  reduce using rule 45 (lvalue)


State 69

   26 expr: expr AND . expr

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27

    expr        go to state 113
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 70

   27 expr: expr OR . expr

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27

    expr        go to state 114
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 71

   15 expr: expr ADDITION . expr

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27

    expr        go to state 115
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 72

   16 expr: expr SUBTRACTION . expr

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27

    expr        go to state 116
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 73

   17 expr: expr MULTIPLICATION . expr

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27

    expr        go to state 117
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 74

   18 expr: expr DIVISION . expr

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27

    expr        go to state 118
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 75

   19 expr: expr MODULO . expr

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27

    expr        go to state 119
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 76

   24 expr: expr EQUALITY . expr

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27

    expr        go to state 120
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 77

   25 expr: expr INEQUALITY . expr

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27

    expr        go to state 121
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 78

   20 expr: expr GREATER_THAN . expr

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27

    expr        go to state 122
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 79

   21 expr: expr LESS_THAN . expr

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27

    expr        go to state 123
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 80

   22 expr: expr GREATER_OR_EQUAL . expr

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27

    expr        go to state 124
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 81

   23 expr: expr LESS_OR_EQUAL . expr

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27

    expr        go to state 125
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 82

    4 stmt: expr SEMICOLON .

    $default  reduce using rule 4 (stmt)


State 83

   37 assignexpr: lvalue ASSIGNMENT . expr

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27

    expr        go to state 126
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 84

   33 term: lvalue INCREMENT .

    $default  reduce using rule 33 (term)


State 85

   35 term: lvalue DECREMENT .

    $default  reduce using rule 35 (term)


State 86

   48 member: lvalue LEFT_SQUARE_BRACKET . expr RIGHT_CURLY_BRACKET

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27

    expr        go to state 127
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 87

   56 normcall: LEFT_PARENTHESES . elist RIGHT_PARENTHESES

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27

    $default  reduce using rule 59 (elist)

    expr        go to state 62
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 128
    objectdef   go to state 36
    const       go to state 39


State 88

   47 member: lvalue DOT . ID

    ID  shift, and go to state 129


State 89

   57 methodcall: DOUBLE_DOT . ID LEFT_PARENTHESES elist RIGHT_PARENTHESES

    ID  shift, and go to state 130


State 90

   52 call: lvalue callsufix .

    $default  reduce using rule 52 (call)


State 91

   54 callsufix: normcall .

    $default  reduce using rule 54 (callsufix)


State 92

   55 callsufix: methodcall .

    $default  reduce using rule 55 (callsufix)


State 93

   50 member: call LEFT_SQUARE_BRACKET . expr RIGHT_SQUARE_BRACKET

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27

    expr        go to state 131
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 94

   51 call: call LEFT_PARENTHESES . elist RIGHT_PARENTHESES

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27

    $default  reduce using rule 59 (elist)

    expr        go to state 62
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 132
    objectdef   go to state 36
    const       go to state 39


State 95

   49 member: call DOT . ID

    ID  shift, and go to state 133


State 96

   15 expr: expr . ADDITION expr
   16     | expr . SUBTRACTION expr
   17     | expr . MULTIPLICATION expr
   18     | expr . DIVISION expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . LESS_THAN expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS_OR_EQUAL expr
   24     | expr . EQUALITY expr
   25     | expr . INEQUALITY expr
   26     | expr . AND expr
   27     | expr . OR expr
   86 ifstmt: IF LEFT_PARENTHESES expr . RIGHT_PARENTHESES stmt
   87       | IF LEFT_PARENTHESES expr . RIGHT_PARENTHESES stmt ELSE stmt

    AND                shift, and go to state 69
    OR                 shift, and go to state 70
    ADDITION           shift, and go to state 71
    SUBTRACTION        shift, and go to state 72
    MULTIPLICATION     shift, and go to state 73
    DIVISION           shift, and go to state 74
    MODULO             shift, and go to state 75
    EQUALITY           shift, and go to state 76
    INEQUALITY         shift, and go to state 77
    GREATER_THAN       shift, and go to state 78
    LESS_THAN          shift, and go to state 79
    GREATER_OR_EQUAL   shift, and go to state 80
    LESS_OR_EQUAL      shift, and go to state 81
    RIGHT_PARENTHESES  shift, and go to state 134


State 97

   90 whilestmt: WHILE $@6 LEFT_PARENTHESES . expr RIGHT_PARENTHESES stmt $@7

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27

    expr        go to state 135
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 98

   93 forstmt: FOR $@8 LEFT_PARENTHESES . elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESES stmt $@9

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27

    $default  reduce using rule 59 (elist)

    expr        go to state 62
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 136
    objectdef   go to state 36
    const       go to state 39


State 99

   73 funcdef: FUNCTION $@3 ID . $@4 LEFT_PARENTHESES idlist RIGHT_PARENTHESES block

    $default  reduce using rule 72 ($@4)

    $@4  go to state 137


State 100

   75 funcdef: FUNCTION $@5 LEFT_PARENTHESES . idlist RIGHT_PARENTHESES block

    ID  shift, and go to state 138

    $default  reduce using rule 83 (idlist)

    idlist  go to state 139


State 101

   95 returnstmt: RETURN expr SEMICOLON .

    $default  reduce using rule 95 (returnstmt)


State 102

   53 call: LEFT_PARENTHESES funcdef . RIGHT_PARENTHESES LEFT_PARENTHESES elist RIGHT_PARENTHESES

    RIGHT_PARENTHESES  shift, and go to state 140


State 103

    2 statements: statements . stmt
   70 block: LEFT_CURLY_BRACKET $@1 statements . RIGHT_CURLY_BRACKET $@2

    IF                   shift, and go to state 4
    WHILE                shift, and go to state 5
    FOR                  shift, and go to state 6
    FUNCTION             shift, and go to state 7
    RETURN               shift, and go to state 8
    BREAK                shift, and go to state 9
    CONTINUE             shift, and go to state 10
    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_CURLY_BRACKET   shift, and go to state 19
    RIGHT_CURLY_BRACKET  shift, and go to state 141
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    SEMICOLON            shift, and go to state 22
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27

    stmt        go to state 28
    expr        go to state 29
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifstmt      go to state 40
    whilestmt   go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


State 104

   15 expr: expr . ADDITION expr
   16     | expr . SUBTRACTION expr
   17     | expr . MULTIPLICATION expr
   18     | expr . DIVISION expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . LESS_THAN expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS_OR_EQUAL expr
   24     | expr . EQUALITY expr
   25     | expr . INEQUALITY expr
   26     | expr . AND expr
   27     | expr . OR expr
   67 indexedelem: LEFT_CURLY_BRACKET expr . COLON expr RIGHT_CURLY_BRACKET

    AND               shift, and go to state 69
    OR                shift, and go to state 70
    ADDITION          shift, and go to state 71
    SUBTRACTION       shift, and go to state 72
    MULTIPLICATION    shift, and go to state 73
    DIVISION          shift, and go to state 74
    MODULO            shift, and go to state 75
    EQUALITY          shift, and go to state 76
    INEQUALITY        shift, and go to state 77
    GREATER_THAN      shift, and go to state 78
    LESS_THAN         shift, and go to state 79
    GREATER_OR_EQUAL  shift, and go to state 80
    LESS_OR_EQUAL     shift, and go to state 81
    COLON             shift, and go to state 142


State 105

   60 nextexpr: COMMA . expr nextexpr

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27

    expr        go to state 143
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 106

   58 elist: expr nextexpr .

    $default  reduce using rule 58 (elist)


State 107

   62 objectdef: LEFT_SQUARE_BRACKET elist RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 62 (objectdef)


State 108

   63 objectdef: LEFT_SQUARE_BRACKET indexed RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 63 (objectdef)


State 109

   65 nextindexed: COMMA . indexedelem nextindexed

    LEFT_CURLY_BRACKET  shift, and go to state 61

    indexedelem  go to state 144


State 110

   64 indexed: indexedelem nextindexed .

    $default  reduce using rule 64 (indexed)


State 111

   29 term: LEFT_PARENTHESES expr RIGHT_PARENTHESES .

    $default  reduce using rule 29 (term)


State 112

   41 primary: LEFT_PARENTHESES funcdef RIGHT_PARENTHESES .
   53 call: LEFT_PARENTHESES funcdef RIGHT_PARENTHESES . LEFT_PARENTHESES elist RIGHT_PARENTHESES

    LEFT_PARENTHESES  shift, and go to state 145

    $default  reduce using rule 41 (primary)


State 113

   15 expr: expr . ADDITION expr
   16     | expr . SUBTRACTION expr
   17     | expr . MULTIPLICATION expr
   18     | expr . DIVISION expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . LESS_THAN expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS_OR_EQUAL expr
   24     | expr . EQUALITY expr
   25     | expr . INEQUALITY expr
   26     | expr . AND expr
   26     | expr AND expr .
   27     | expr . OR expr

    ADDITION          shift, and go to state 71
    SUBTRACTION       shift, and go to state 72
    MULTIPLICATION    shift, and go to state 73
    DIVISION          shift, and go to state 74
    MODULO            shift, and go to state 75
    EQUALITY          shift, and go to state 76
    INEQUALITY        shift, and go to state 77
    GREATER_THAN      shift, and go to state 78
    LESS_THAN         shift, and go to state 79
    GREATER_OR_EQUAL  shift, and go to state 80
    LESS_OR_EQUAL     shift, and go to state 81

    $default  reduce using rule 26 (expr)


State 114

   15 expr: expr . ADDITION expr
   16     | expr . SUBTRACTION expr
   17     | expr . MULTIPLICATION expr
   18     | expr . DIVISION expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . LESS_THAN expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS_OR_EQUAL expr
   24     | expr . EQUALITY expr
   25     | expr . INEQUALITY expr
   26     | expr . AND expr
   27     | expr . OR expr
   27     | expr OR expr .

    AND               shift, and go to state 69
    ADDITION          shift, and go to state 71
    SUBTRACTION       shift, and go to state 72
    MULTIPLICATION    shift, and go to state 73
    DIVISION          shift, and go to state 74
    MODULO            shift, and go to state 75
    EQUALITY          shift, and go to state 76
    INEQUALITY        shift, and go to state 77
    GREATER_THAN      shift, and go to state 78
    LESS_THAN         shift, and go to state 79
    GREATER_OR_EQUAL  shift, and go to state 80
    LESS_OR_EQUAL     shift, and go to state 81

    $default  reduce using rule 27 (expr)


State 115

   15 expr: expr . ADDITION expr
   15     | expr ADDITION expr .
   16     | expr . SUBTRACTION expr
   17     | expr . MULTIPLICATION expr
   18     | expr . DIVISION expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . LESS_THAN expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS_OR_EQUAL expr
   24     | expr . EQUALITY expr
   25     | expr . INEQUALITY expr
   26     | expr . AND expr
   27     | expr . OR expr

    MULTIPLICATION  shift, and go to state 73
    DIVISION        shift, and go to state 74
    MODULO          shift, and go to state 75

    $default  reduce using rule 15 (expr)


State 116

   15 expr: expr . ADDITION expr
   16     | expr . SUBTRACTION expr
   16     | expr SUBTRACTION expr .
   17     | expr . MULTIPLICATION expr
   18     | expr . DIVISION expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . LESS_THAN expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS_OR_EQUAL expr
   24     | expr . EQUALITY expr
   25     | expr . INEQUALITY expr
   26     | expr . AND expr
   27     | expr . OR expr

    MULTIPLICATION  shift, and go to state 73
    DIVISION        shift, and go to state 74
    MODULO          shift, and go to state 75

    $default  reduce using rule 16 (expr)


State 117

   15 expr: expr . ADDITION expr
   16     | expr . SUBTRACTION expr
   17     | expr . MULTIPLICATION expr
   17     | expr MULTIPLICATION expr .
   18     | expr . DIVISION expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . LESS_THAN expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS_OR_EQUAL expr
   24     | expr . EQUALITY expr
   25     | expr . INEQUALITY expr
   26     | expr . AND expr
   27     | expr . OR expr

    $default  reduce using rule 17 (expr)


State 118

   15 expr: expr . ADDITION expr
   16     | expr . SUBTRACTION expr
   17     | expr . MULTIPLICATION expr
   18     | expr . DIVISION expr
   18     | expr DIVISION expr .
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . LESS_THAN expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS_OR_EQUAL expr
   24     | expr . EQUALITY expr
   25     | expr . INEQUALITY expr
   26     | expr . AND expr
   27     | expr . OR expr

    $default  reduce using rule 18 (expr)


State 119

   15 expr: expr . ADDITION expr
   16     | expr . SUBTRACTION expr
   17     | expr . MULTIPLICATION expr
   18     | expr . DIVISION expr
   19     | expr . MODULO expr
   19     | expr MODULO expr .
   20     | expr . GREATER_THAN expr
   21     | expr . LESS_THAN expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS_OR_EQUAL expr
   24     | expr . EQUALITY expr
   25     | expr . INEQUALITY expr
   26     | expr . AND expr
   27     | expr . OR expr

    $default  reduce using rule 19 (expr)


State 120

   15 expr: expr . ADDITION expr
   16     | expr . SUBTRACTION expr
   17     | expr . MULTIPLICATION expr
   18     | expr . DIVISION expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . LESS_THAN expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS_OR_EQUAL expr
   24     | expr . EQUALITY expr
   24     | expr EQUALITY expr .
   25     | expr . INEQUALITY expr
   26     | expr . AND expr
   27     | expr . OR expr

    ADDITION          shift, and go to state 71
    SUBTRACTION       shift, and go to state 72
    MULTIPLICATION    shift, and go to state 73
    DIVISION          shift, and go to state 74
    MODULO            shift, and go to state 75
    GREATER_THAN      shift, and go to state 78
    LESS_THAN         shift, and go to state 79
    GREATER_OR_EQUAL  shift, and go to state 80
    LESS_OR_EQUAL     shift, and go to state 81

    EQUALITY    error (nonassociative)
    INEQUALITY  error (nonassociative)

    $default  reduce using rule 24 (expr)


State 121

   15 expr: expr . ADDITION expr
   16     | expr . SUBTRACTION expr
   17     | expr . MULTIPLICATION expr
   18     | expr . DIVISION expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . LESS_THAN expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS_OR_EQUAL expr
   24     | expr . EQUALITY expr
   25     | expr . INEQUALITY expr
   25     | expr INEQUALITY expr .
   26     | expr . AND expr
   27     | expr . OR expr

    ADDITION          shift, and go to state 71
    SUBTRACTION       shift, and go to state 72
    MULTIPLICATION    shift, and go to state 73
    DIVISION          shift, and go to state 74
    MODULO            shift, and go to state 75
    GREATER_THAN      shift, and go to state 78
    LESS_THAN         shift, and go to state 79
    GREATER_OR_EQUAL  shift, and go to state 80
    LESS_OR_EQUAL     shift, and go to state 81

    EQUALITY    error (nonassociative)
    INEQUALITY  error (nonassociative)

    $default  reduce using rule 25 (expr)


State 122

   15 expr: expr . ADDITION expr
   16     | expr . SUBTRACTION expr
   17     | expr . MULTIPLICATION expr
   18     | expr . DIVISION expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   20     | expr GREATER_THAN expr .
   21     | expr . LESS_THAN expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS_OR_EQUAL expr
   24     | expr . EQUALITY expr
   25     | expr . INEQUALITY expr
   26     | expr . AND expr
   27     | expr . OR expr

    ADDITION        shift, and go to state 71
    SUBTRACTION     shift, and go to state 72
    MULTIPLICATION  shift, and go to state 73
    DIVISION        shift, and go to state 74
    MODULO          shift, and go to state 75

    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)

    $default  reduce using rule 20 (expr)


State 123

   15 expr: expr . ADDITION expr
   16     | expr . SUBTRACTION expr
   17     | expr . MULTIPLICATION expr
   18     | expr . DIVISION expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . LESS_THAN expr
   21     | expr LESS_THAN expr .
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS_OR_EQUAL expr
   24     | expr . EQUALITY expr
   25     | expr . INEQUALITY expr
   26     | expr . AND expr
   27     | expr . OR expr

    ADDITION        shift, and go to state 71
    SUBTRACTION     shift, and go to state 72
    MULTIPLICATION  shift, and go to state 73
    DIVISION        shift, and go to state 74
    MODULO          shift, and go to state 75

    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)

    $default  reduce using rule 21 (expr)


State 124

   15 expr: expr . ADDITION expr
   16     | expr . SUBTRACTION expr
   17     | expr . MULTIPLICATION expr
   18     | expr . DIVISION expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . LESS_THAN expr
   22     | expr . GREATER_OR_EQUAL expr
   22     | expr GREATER_OR_EQUAL expr .
   23     | expr . LESS_OR_EQUAL expr
   24     | expr . EQUALITY expr
   25     | expr . INEQUALITY expr
   26     | expr . AND expr
   27     | expr . OR expr

    ADDITION        shift, and go to state 71
    SUBTRACTION     shift, and go to state 72
    MULTIPLICATION  shift, and go to state 73
    DIVISION        shift, and go to state 74
    MODULO          shift, and go to state 75

    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)

    $default  reduce using rule 22 (expr)


State 125

   15 expr: expr . ADDITION expr
   16     | expr . SUBTRACTION expr
   17     | expr . MULTIPLICATION expr
   18     | expr . DIVISION expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . LESS_THAN expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS_OR_EQUAL expr
   23     | expr LESS_OR_EQUAL expr .
   24     | expr . EQUALITY expr
   25     | expr . INEQUALITY expr
   26     | expr . AND expr
   27     | expr . OR expr

    ADDITION        shift, and go to state 71
    SUBTRACTION     shift, and go to state 72
    MULTIPLICATION  shift, and go to state 73
    DIVISION        shift, and go to state 74
    MODULO          shift, and go to state 75

    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)

    $default  reduce using rule 23 (expr)


State 126

   15 expr: expr . ADDITION expr
   16     | expr . SUBTRACTION expr
   17     | expr . MULTIPLICATION expr
   18     | expr . DIVISION expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . LESS_THAN expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS_OR_EQUAL expr
   24     | expr . EQUALITY expr
   25     | expr . INEQUALITY expr
   26     | expr . AND expr
   27     | expr . OR expr
   37 assignexpr: lvalue ASSIGNMENT expr .

    AND               shift, and go to state 69
    OR                shift, and go to state 70
    ADDITION          shift, and go to state 71
    SUBTRACTION       shift, and go to state 72
    MULTIPLICATION    shift, and go to state 73
    DIVISION          shift, and go to state 74
    MODULO            shift, and go to state 75
    EQUALITY          shift, and go to state 76
    INEQUALITY        shift, and go to state 77
    GREATER_THAN      shift, and go to state 78
    LESS_THAN         shift, and go to state 79
    GREATER_OR_EQUAL  shift, and go to state 80
    LESS_OR_EQUAL     shift, and go to state 81

    $default  reduce using rule 37 (assignexpr)


State 127

   15 expr: expr . ADDITION expr
   16     | expr . SUBTRACTION expr
   17     | expr . MULTIPLICATION expr
   18     | expr . DIVISION expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . LESS_THAN expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS_OR_EQUAL expr
   24     | expr . EQUALITY expr
   25     | expr . INEQUALITY expr
   26     | expr . AND expr
   27     | expr . OR expr
   48 member: lvalue LEFT_SQUARE_BRACKET expr . RIGHT_CURLY_BRACKET

    AND                  shift, and go to state 69
    OR                   shift, and go to state 70
    ADDITION             shift, and go to state 71
    SUBTRACTION          shift, and go to state 72
    MULTIPLICATION       shift, and go to state 73
    DIVISION             shift, and go to state 74
    MODULO               shift, and go to state 75
    EQUALITY             shift, and go to state 76
    INEQUALITY           shift, and go to state 77
    GREATER_THAN         shift, and go to state 78
    LESS_THAN            shift, and go to state 79
    GREATER_OR_EQUAL     shift, and go to state 80
    LESS_OR_EQUAL        shift, and go to state 81
    RIGHT_CURLY_BRACKET  shift, and go to state 146


State 128

   56 normcall: LEFT_PARENTHESES elist . RIGHT_PARENTHESES

    RIGHT_PARENTHESES  shift, and go to state 147


State 129

   47 member: lvalue DOT ID .

    $default  reduce using rule 47 (member)


State 130

   57 methodcall: DOUBLE_DOT ID . LEFT_PARENTHESES elist RIGHT_PARENTHESES

    LEFT_PARENTHESES  shift, and go to state 148


State 131

   15 expr: expr . ADDITION expr
   16     | expr . SUBTRACTION expr
   17     | expr . MULTIPLICATION expr
   18     | expr . DIVISION expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . LESS_THAN expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS_OR_EQUAL expr
   24     | expr . EQUALITY expr
   25     | expr . INEQUALITY expr
   26     | expr . AND expr
   27     | expr . OR expr
   50 member: call LEFT_SQUARE_BRACKET expr . RIGHT_SQUARE_BRACKET

    AND                   shift, and go to state 69
    OR                    shift, and go to state 70
    ADDITION              shift, and go to state 71
    SUBTRACTION           shift, and go to state 72
    MULTIPLICATION        shift, and go to state 73
    DIVISION              shift, and go to state 74
    MODULO                shift, and go to state 75
    EQUALITY              shift, and go to state 76
    INEQUALITY            shift, and go to state 77
    GREATER_THAN          shift, and go to state 78
    LESS_THAN             shift, and go to state 79
    GREATER_OR_EQUAL      shift, and go to state 80
    LESS_OR_EQUAL         shift, and go to state 81
    RIGHT_SQUARE_BRACKET  shift, and go to state 149


State 132

   51 call: call LEFT_PARENTHESES elist . RIGHT_PARENTHESES

    RIGHT_PARENTHESES  shift, and go to state 150


State 133

   49 member: call DOT ID .

    $default  reduce using rule 49 (member)


State 134

   86 ifstmt: IF LEFT_PARENTHESES expr RIGHT_PARENTHESES . stmt
   87       | IF LEFT_PARENTHESES expr RIGHT_PARENTHESES . stmt ELSE stmt

    IF                   shift, and go to state 4
    WHILE                shift, and go to state 5
    FOR                  shift, and go to state 6
    FUNCTION             shift, and go to state 7
    RETURN               shift, and go to state 8
    BREAK                shift, and go to state 9
    CONTINUE             shift, and go to state 10
    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_CURLY_BRACKET   shift, and go to state 19
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    SEMICOLON            shift, and go to state 22
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27

    stmt        go to state 151
    expr        go to state 29
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifstmt      go to state 40
    whilestmt   go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


State 135

   15 expr: expr . ADDITION expr
   16     | expr . SUBTRACTION expr
   17     | expr . MULTIPLICATION expr
   18     | expr . DIVISION expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . LESS_THAN expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS_OR_EQUAL expr
   24     | expr . EQUALITY expr
   25     | expr . INEQUALITY expr
   26     | expr . AND expr
   27     | expr . OR expr
   90 whilestmt: WHILE $@6 LEFT_PARENTHESES expr . RIGHT_PARENTHESES stmt $@7

    AND                shift, and go to state 69
    OR                 shift, and go to state 70
    ADDITION           shift, and go to state 71
    SUBTRACTION        shift, and go to state 72
    MULTIPLICATION     shift, and go to state 73
    DIVISION           shift, and go to state 74
    MODULO             shift, and go to state 75
    EQUALITY           shift, and go to state 76
    INEQUALITY         shift, and go to state 77
    GREATER_THAN       shift, and go to state 78
    LESS_THAN          shift, and go to state 79
    GREATER_OR_EQUAL   shift, and go to state 80
    LESS_OR_EQUAL      shift, and go to state 81
    RIGHT_PARENTHESES  shift, and go to state 152


State 136

   93 forstmt: FOR $@8 LEFT_PARENTHESES elist . SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESES stmt $@9

    SEMICOLON  shift, and go to state 153


State 137

   73 funcdef: FUNCTION $@3 ID $@4 . LEFT_PARENTHESES idlist RIGHT_PARENTHESES block

    LEFT_PARENTHESES  shift, and go to state 154


State 138

   82 idlist: ID . nextid

    COMMA  shift, and go to state 155

    $default  reduce using rule 85 (nextid)

    nextid  go to state 156


State 139

   75 funcdef: FUNCTION $@5 LEFT_PARENTHESES idlist . RIGHT_PARENTHESES block

    RIGHT_PARENTHESES  shift, and go to state 157


State 140

   53 call: LEFT_PARENTHESES funcdef RIGHT_PARENTHESES . LEFT_PARENTHESES elist RIGHT_PARENTHESES

    LEFT_PARENTHESES  shift, and go to state 145


State 141

   70 block: LEFT_CURLY_BRACKET $@1 statements RIGHT_CURLY_BRACKET . $@2

    $default  reduce using rule 69 ($@2)

    $@2  go to state 158


State 142

   67 indexedelem: LEFT_CURLY_BRACKET expr COLON . expr RIGHT_CURLY_BRACKET

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27

    expr        go to state 159
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 143

   15 expr: expr . ADDITION expr
   16     | expr . SUBTRACTION expr
   17     | expr . MULTIPLICATION expr
   18     | expr . DIVISION expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . LESS_THAN expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS_OR_EQUAL expr
   24     | expr . EQUALITY expr
   25     | expr . INEQUALITY expr
   26     | expr . AND expr
   27     | expr . OR expr
   60 nextexpr: COMMA expr . nextexpr

    AND               shift, and go to state 69
    OR                shift, and go to state 70
    ADDITION          shift, and go to state 71
    SUBTRACTION       shift, and go to state 72
    MULTIPLICATION    shift, and go to state 73
    DIVISION          shift, and go to state 74
    MODULO            shift, and go to state 75
    EQUALITY          shift, and go to state 76
    INEQUALITY        shift, and go to state 77
    GREATER_THAN      shift, and go to state 78
    LESS_THAN         shift, and go to state 79
    GREATER_OR_EQUAL  shift, and go to state 80
    LESS_OR_EQUAL     shift, and go to state 81
    COMMA             shift, and go to state 105

    $default  reduce using rule 61 (nextexpr)

    nextexpr  go to state 160


State 144

   65 nextindexed: COMMA indexedelem . nextindexed

    COMMA  shift, and go to state 109

    $default  reduce using rule 66 (nextindexed)

    nextindexed  go to state 161


State 145

   53 call: LEFT_PARENTHESES funcdef RIGHT_PARENTHESES LEFT_PARENTHESES . elist RIGHT_PARENTHESES

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27

    $default  reduce using rule 59 (elist)

    expr        go to state 62
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 162
    objectdef   go to state 36
    const       go to state 39


State 146

   48 member: lvalue LEFT_SQUARE_BRACKET expr RIGHT_CURLY_BRACKET .

    $default  reduce using rule 48 (member)


State 147

   56 normcall: LEFT_PARENTHESES elist RIGHT_PARENTHESES .

    $default  reduce using rule 56 (normcall)


State 148

   57 methodcall: DOUBLE_DOT ID LEFT_PARENTHESES . elist RIGHT_PARENTHESES

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27

    $default  reduce using rule 59 (elist)

    expr        go to state 62
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 163
    objectdef   go to state 36
    const       go to state 39


State 149

   50 member: call LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 50 (member)


State 150

   51 call: call LEFT_PARENTHESES elist RIGHT_PARENTHESES .

    $default  reduce using rule 51 (call)


State 151

   86 ifstmt: IF LEFT_PARENTHESES expr RIGHT_PARENTHESES stmt .
   87       | IF LEFT_PARENTHESES expr RIGHT_PARENTHESES stmt . ELSE stmt

    ELSE  shift, and go to state 164

    $default  reduce using rule 86 (ifstmt)


State 152

   90 whilestmt: WHILE $@6 LEFT_PARENTHESES expr RIGHT_PARENTHESES . stmt $@7

    IF                   shift, and go to state 4
    WHILE                shift, and go to state 5
    FOR                  shift, and go to state 6
    FUNCTION             shift, and go to state 7
    RETURN               shift, and go to state 8
    BREAK                shift, and go to state 9
    CONTINUE             shift, and go to state 10
    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_CURLY_BRACKET   shift, and go to state 19
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    SEMICOLON            shift, and go to state 22
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27

    stmt        go to state 165
    expr        go to state 29
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifstmt      go to state 40
    whilestmt   go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


State 153

   93 forstmt: FOR $@8 LEFT_PARENTHESES elist SEMICOLON . expr SEMICOLON elist RIGHT_PARENTHESES stmt $@9

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27

    expr        go to state 166
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 154

   73 funcdef: FUNCTION $@3 ID $@4 LEFT_PARENTHESES . idlist RIGHT_PARENTHESES block

    ID  shift, and go to state 138

    $default  reduce using rule 83 (idlist)

    idlist  go to state 167


State 155

   84 nextid: COMMA . ID nextid

    ID  shift, and go to state 168


State 156

   82 idlist: ID nextid .

    $default  reduce using rule 82 (idlist)


State 157

   75 funcdef: FUNCTION $@5 LEFT_PARENTHESES idlist RIGHT_PARENTHESES . block

    LEFT_CURLY_BRACKET  shift, and go to state 19

    block  go to state 169


State 158

   70 block: LEFT_CURLY_BRACKET $@1 statements RIGHT_CURLY_BRACKET $@2 .

    $default  reduce using rule 70 (block)


State 159

   15 expr: expr . ADDITION expr
   16     | expr . SUBTRACTION expr
   17     | expr . MULTIPLICATION expr
   18     | expr . DIVISION expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . LESS_THAN expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS_OR_EQUAL expr
   24     | expr . EQUALITY expr
   25     | expr . INEQUALITY expr
   26     | expr . AND expr
   27     | expr . OR expr
   67 indexedelem: LEFT_CURLY_BRACKET expr COLON expr . RIGHT_CURLY_BRACKET

    AND                  shift, and go to state 69
    OR                   shift, and go to state 70
    ADDITION             shift, and go to state 71
    SUBTRACTION          shift, and go to state 72
    MULTIPLICATION       shift, and go to state 73
    DIVISION             shift, and go to state 74
    MODULO               shift, and go to state 75
    EQUALITY             shift, and go to state 76
    INEQUALITY           shift, and go to state 77
    GREATER_THAN         shift, and go to state 78
    LESS_THAN            shift, and go to state 79
    GREATER_OR_EQUAL     shift, and go to state 80
    LESS_OR_EQUAL        shift, and go to state 81
    RIGHT_CURLY_BRACKET  shift, and go to state 170


State 160

   60 nextexpr: COMMA expr nextexpr .

    $default  reduce using rule 60 (nextexpr)


State 161

   65 nextindexed: COMMA indexedelem nextindexed .

    $default  reduce using rule 65 (nextindexed)


State 162

   53 call: LEFT_PARENTHESES funcdef RIGHT_PARENTHESES LEFT_PARENTHESES elist . RIGHT_PARENTHESES

    RIGHT_PARENTHESES  shift, and go to state 171


State 163

   57 methodcall: DOUBLE_DOT ID LEFT_PARENTHESES elist . RIGHT_PARENTHESES

    RIGHT_PARENTHESES  shift, and go to state 172


State 164

   87 ifstmt: IF LEFT_PARENTHESES expr RIGHT_PARENTHESES stmt ELSE . stmt

    IF                   shift, and go to state 4
    WHILE                shift, and go to state 5
    FOR                  shift, and go to state 6
    FUNCTION             shift, and go to state 7
    RETURN               shift, and go to state 8
    BREAK                shift, and go to state 9
    CONTINUE             shift, and go to state 10
    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_CURLY_BRACKET   shift, and go to state 19
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    SEMICOLON            shift, and go to state 22
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27

    stmt        go to state 173
    expr        go to state 29
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifstmt      go to state 40
    whilestmt   go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


State 165

   90 whilestmt: WHILE $@6 LEFT_PARENTHESES expr RIGHT_PARENTHESES stmt . $@7

    $default  reduce using rule 89 ($@7)

    $@7  go to state 174


State 166

   15 expr: expr . ADDITION expr
   16     | expr . SUBTRACTION expr
   17     | expr . MULTIPLICATION expr
   18     | expr . DIVISION expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . LESS_THAN expr
   22     | expr . GREATER_OR_EQUAL expr
   23     | expr . LESS_OR_EQUAL expr
   24     | expr . EQUALITY expr
   25     | expr . INEQUALITY expr
   26     | expr . AND expr
   27     | expr . OR expr
   93 forstmt: FOR $@8 LEFT_PARENTHESES elist SEMICOLON expr . SEMICOLON elist RIGHT_PARENTHESES stmt $@9

    AND               shift, and go to state 69
    OR                shift, and go to state 70
    ADDITION          shift, and go to state 71
    SUBTRACTION       shift, and go to state 72
    MULTIPLICATION    shift, and go to state 73
    DIVISION          shift, and go to state 74
    MODULO            shift, and go to state 75
    EQUALITY          shift, and go to state 76
    INEQUALITY        shift, and go to state 77
    GREATER_THAN      shift, and go to state 78
    LESS_THAN         shift, and go to state 79
    GREATER_OR_EQUAL  shift, and go to state 80
    LESS_OR_EQUAL     shift, and go to state 81
    SEMICOLON         shift, and go to state 175


State 167

   73 funcdef: FUNCTION $@3 ID $@4 LEFT_PARENTHESES idlist . RIGHT_PARENTHESES block

    RIGHT_PARENTHESES  shift, and go to state 176


State 168

   84 nextid: COMMA ID . nextid

    COMMA  shift, and go to state 155

    $default  reduce using rule 85 (nextid)

    nextid  go to state 177


State 169

   75 funcdef: FUNCTION $@5 LEFT_PARENTHESES idlist RIGHT_PARENTHESES block .

    $default  reduce using rule 75 (funcdef)


State 170

   67 indexedelem: LEFT_CURLY_BRACKET expr COLON expr RIGHT_CURLY_BRACKET .

    $default  reduce using rule 67 (indexedelem)


State 171

   53 call: LEFT_PARENTHESES funcdef RIGHT_PARENTHESES LEFT_PARENTHESES elist RIGHT_PARENTHESES .

    $default  reduce using rule 53 (call)


State 172

   57 methodcall: DOUBLE_DOT ID LEFT_PARENTHESES elist RIGHT_PARENTHESES .

    $default  reduce using rule 57 (methodcall)


State 173

   87 ifstmt: IF LEFT_PARENTHESES expr RIGHT_PARENTHESES stmt ELSE stmt .

    $default  reduce using rule 87 (ifstmt)


State 174

   90 whilestmt: WHILE $@6 LEFT_PARENTHESES expr RIGHT_PARENTHESES stmt $@7 .

    $default  reduce using rule 90 (whilestmt)


State 175

   93 forstmt: FOR $@8 LEFT_PARENTHESES elist SEMICOLON expr SEMICOLON . elist RIGHT_PARENTHESES stmt $@9

    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27

    $default  reduce using rule 59 (elist)

    expr        go to state 62
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 178
    objectdef   go to state 36
    const       go to state 39


State 176

   73 funcdef: FUNCTION $@3 ID $@4 LEFT_PARENTHESES idlist RIGHT_PARENTHESES . block

    LEFT_CURLY_BRACKET  shift, and go to state 19

    block  go to state 179


State 177

   84 nextid: COMMA ID nextid .

    $default  reduce using rule 84 (nextid)


State 178

   93 forstmt: FOR $@8 LEFT_PARENTHESES elist SEMICOLON expr SEMICOLON elist . RIGHT_PARENTHESES stmt $@9

    RIGHT_PARENTHESES  shift, and go to state 180


State 179

   73 funcdef: FUNCTION $@3 ID $@4 LEFT_PARENTHESES idlist RIGHT_PARENTHESES block .

    $default  reduce using rule 73 (funcdef)


State 180

   93 forstmt: FOR $@8 LEFT_PARENTHESES elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESES . stmt $@9

    IF                   shift, and go to state 4
    WHILE                shift, and go to state 5
    FOR                  shift, and go to state 6
    FUNCTION             shift, and go to state 7
    RETURN               shift, and go to state 8
    BREAK                shift, and go to state 9
    CONTINUE             shift, and go to state 10
    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    SUBTRACTION          shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_CURLY_BRACKET   shift, and go to state 19
    LEFT_SQUARE_BRACKET  shift, and go to state 20
    LEFT_PARENTHESES     shift, and go to state 21
    SEMICOLON            shift, and go to state 22
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    REAL                 shift, and go to state 26
    STRING               shift, and go to state 27

    stmt        go to state 181
    expr        go to state 29
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifstmt      go to state 40
    whilestmt   go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


State 181

   93 forstmt: FOR $@8 LEFT_PARENTHESES elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESES stmt . $@9

    $default  reduce using rule 92 ($@9)

    $@9  go to state 182


State 182

   93 forstmt: FOR $@8 LEFT_PARENTHESES elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESES stmt $@9 .

    $default  reduce using rule 93 (forstmt)
