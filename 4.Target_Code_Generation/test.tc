Instruction#		Opcode		Result		Arg1		Arg2
===================================================================================
1:			assign		1(global),5	4(number),0			
2:			assign		1(global),6	1(global),5			
3:			assign		1(global),4	1(global),6			
4:			assign		1(global),7	1(global),4			
5:			assign		1(global),3	1(global),7			
6:			assign		1(global),8	1(global),3			
7:			assign		1(global),2	1(global),8			
8:			assign		1(global),9	1(global),2			
9:			assign		1(global),1	1(global),9			
10:			assign		1(global),10	1(global),1			
11:			assign		1(global),0	1(global),10			
12:			assign		1(global),11	1(global),0			
13:			if_less		0(label),16	1(global),0	1(global),1
14:			assign		1(global),6	6(bool),0			
15:			jump		0(label),17						
16:			assign		1(global),6	6(bool),1			
17:			if_greater		0(label),20	1(global),2	1(global),3
18:			assign		1(global),7	6(bool),0			
19:			jump		0(label),21						
20:			assign		1(global),7	6(bool),1			
21:			if_less		0(label),24	1(global),4	1(global),5
22:			assign		1(global),8	6(bool),0			
23:			jump		0(label),25						
24:			assign		1(global),8	6(bool),1			
25:			and		1(global),9	1(global),7	1(global),8
26:			or		1(global),10	1(global),6	1(global),9
27:			assign		1(global),12	1(global),10			
28:			assign		1(global),11	1(global),12			
29:			not		1(global),6	1(global),12			
30:			and		1(global),7	1(global),6	1(global),12
31:			or		1(global),8	1(global),7	1(global),0
32:			assign		1(global),13	1(global),8			
33:			assign		1(global),9	1(global),13			
34:			jump		0(label),39						
35:			enterfunc		8(userfunc),0						
36:			assign		10(retval)	6(bool),0			
37:			jump		0(label),39						
38:			exitfunc		8(userfunc),0						
39:			pusharg					4(number),1			
40:			call					8(userfunc),0			
41:			assign		1(global),6	10(retval)			
42:			and		1(global),7	1(global),12	1(global),6
43:			jump		0(label),48						
44:			enterfunc		8(userfunc),1						
45:			assign		10(retval)	6(bool),1			
46:			jump		0(label),48						
47:			exitfunc		8(userfunc),1						
48:			or		1(global),6	1(global),7	8(userfunc),1
49:			assign		1(global),12	1(global),6			
50:			assign		1(global),7	1(global),12			
51:			or		1(global),6	1(global),0	1(global),1
52:			assign		1(global),13	1(global),12			
53:			assign		1(global),7	1(global),13			
54:			or		1(global),8	1(global),6	1(global),7
55:			if_eq		0(label),57	1(global),8	6(bool),1
56:			jump		0(label),80						
57:			assign		1(global),14	4(number),2			
58:			assign		1(global),15	1(global),14			
59:			if_less		0(label),62	1(global),14	4(number),3
60:			assign		1(global),16	6(bool),0			
61:			jump		0(label),63						
62:			assign		1(global),16	6(bool),1			
63:			and		1(global),17	1(global),16	1(global),0
64:			if_eq		0(label),69	1(global),17	6(bool),1
65:			jump		0(label),76						
66:			add		1(global),14	4(number),0	1(global),14
67:			assign		1(global),18	1(global),14			
68:			jump		0(label),59						
69:			pusharg					1(global),14			
70:			call					9(libfunc),0			
71:			assign		1(global),19	10(retval)			
72:			jump		0(label),66						
73:			add		1(global),14	4(number),0	1(global),14
74:			assign		1(global),20	1(global),14			
75:			jump		0(label),66						
76:			pusharg					1(global),13			
77:			call					9(libfunc),0			
78:			assign		1(global),21	10(retval)			
79:			jump		0(label),88						
80:			not		1(global),6	1(global),13			
81:			if_eq		0(label),83	1(global),6	6(bool),1
82:			jump		0(label),88						
83:			not		1(global),22	1(global),13			
84:			pusharg					1(global),22			
85:			call					9(libfunc),0			
86:			assign		1(global),23	10(retval)			
87:			jump		0(label),80						
===================================================================================

Const Numbers:
===================================================================================
0:	1
1:	2
2:	0
3:	5
===================================================================================

User Functions:
===================================================================================
0:	_f1
1:	_f2
===================================================================================

Library Functions:
===================================================================================
0:	print
===================================================================================
